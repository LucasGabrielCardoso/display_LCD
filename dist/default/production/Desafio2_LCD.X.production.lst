

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 19 21:07:02 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F452 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001156                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for LCD_Set_Latin_Char@F2512
    75   001156  02                 	db	2
    76   001157  04                 	db	4
    77   001158  00                 	db	0
    78   001159  0E                 	db	14
    79   00115A  01                 	db	1
    80   00115B  0F                 	db	15
    81   00115C  11                 	db	17
    82   00115D  1F                 	db	31
    83                           
    84                           ;initializer for LCD_Set_Latin_Char@F2510
    85   00115E  0D                 	db	13
    86   00115F  12                 	db	18
    87   001160  00                 	db	0
    88   001161  0E                 	db	14
    89   001162  01                 	db	1
    90   001163  0F                 	db	15
    91   001164  11                 	db	17
    92   001165  1F                 	db	31
    93                           
    94                           ;initializer for LCD_Set_Latin_Char@F2508
    95   001166  00                 	db	0
    96   001167  00                 	db	0
    97   001168  0E                 	db	14
    98   001169  10                 	db	16
    99   00116A  11                 	db	17
   100   00116B  0E                 	db	14
   101   00116C  04                 	db	4
   102   00116D  0C                 	db	12
   103                           
   104                           ;initializer for Cursor_Select@state
   105   00116E  02                 	db	2
   106   000000                     _LATB	set	3978
   107   000000                     _PORTA	set	3968
   108   000000                     _PORTBbits	set	3969
   109   000000                     _LATD	set	3980
   110   000000                     _LATC	set	3979
   111   000000                     _PORTB	set	3969
   112   000000                     _LATA	set	3977
   113   000000                     _PORTD	set	3971
   114   000000                     _PORTC	set	3970
   115   000000                     _LATCbits	set	3979
   116   000000                     _TRISA	set	3986
   117   000000                     _LATDbits	set	3980
   118   000000                     _CCP2CON	set	4026
   119   000000                     _CCP1CON	set	4029
   120   000000                     _INTCON2bits	set	4081
   121   000000                     _TRISD	set	3989
   122   000000                     _TRISC	set	3988
   123   000000                     _TRISB	set	3987
   124                           
   125                           	psect	smallconst
   126   000600                     __psmallconst:
   127                           	callstack 0
   128   000600  00                 	db	0
   129   000601                     STR_1:
   130   000601  20                 	db	32
   131   000602  20                 	db	32
   132   000603  6F                 	db	111	;'o'
   133   000604  70                 	db	112	;'p'
   134   000605  20                 	db	32
   135   000606  20                 	db	32
   136   000607  6F                 	db	111	;'o'
   137   000608  20                 	db	32
   138   000609  31                 	db	49	;'1'
   139   00060A  20                 	db	32
   140   00060B  20                 	db	32
   141   00060C  20                 	db	32
   142   00060D  20                 	db	32
   143   00060E  20                 	db	32
   144   00060F  20                 	db	32
   145   000610  20                 	db	32
   146   000611  20                 	db	32
   147   000612  00                 	db	0
   148   000613                     STR_2:
   149   000613  20                 	db	32
   150   000614  20                 	db	32
   151   000615  6F                 	db	111	;'o'
   152   000616  70                 	db	112	;'p'
   153   000617  20                 	db	32
   154   000618  20                 	db	32
   155   000619  6F                 	db	111	;'o'
   156   00061A  20                 	db	32
   157   00061B  32                 	db	50	;'2'
   158   00061C  20                 	db	32
   159   00061D  20                 	db	32
   160   00061E  20                 	db	32
   161   00061F  20                 	db	32
   162   000620  20                 	db	32
   163   000621  20                 	db	32
   164   000622  20                 	db	32
   165   000623  20                 	db	32
   166   000624  00                 	db	0
   167   000625                     STR_4:
   168   000625  76                 	db	118	;'v'
   169   000626  6F                 	db	111	;'o'
   170   000627  6C                 	db	108	;'l'
   171   000628  74                 	db	116	;'t'
   172   000629  61                 	db	97	;'a'
   173   00062A  72                 	db	114	;'r'
   174   00062B  3C                 	db	60	;'<'
   175   00062C  3C                 	db	60	;'<'
   176   00062D  70                 	db	112	;'p'
   177   00062E  72                 	db	114	;'r'
   178   00062F  65                 	db	101	;'e'
   179   000630  73                 	db	115	;'s'
   180   000631  73                 	db	115	;'s'
   181   000632  20                 	db	32
   182   000633  42                 	db	66	;'B'
   183   000634  32                 	db	50	;'2'
   184   000635  00                 	db	0
   185   000636                     STR_3:
   186   000636  6F                 	db	111	;'o'
   187   000637  70                 	db	112	;'p'
   188   000638  20                 	db	32
   189   000639  20                 	db	32
   190   00063A  6F                 	db	111	;'o'
   191   00063B  20                 	db	32
   192   00063C  31                 	db	49	;'1'
   193   00063D  00                 	db	0
   194   00063E                     STR_5:
   195   00063E  6F                 	db	111	;'o'
   196   00063F  70                 	db	112	;'p'
   197   000640  20                 	db	32
   198   000641  20                 	db	32
   199   000642  6F                 	db	111	;'o'
   200   000643  20                 	db	32
   201   000644  32                 	db	50	;'2'
   202   000645  00                 	db	0
   203   000646                     STR_10:
   204   000646  5B                 	db	91	;'['
   205   000647  45                 	db	69	;'E'
   206   000648  4E                 	db	78	;'N'
   207   000649  54                 	db	84	;'T'
   208   00064A  45                 	db	69	;'E'
   209   00064B  52                 	db	82	;'R'
   210   00064C  5D                 	db	93	;']'
   211   00064D  00                 	db	0
   212   00064E                     STR_9:
   213   00064E  3E                 	db	62	;'>'
   214   00064F  00                 	db	0
   215   000650  00                 	db	0	; dummy byte at the end
   216   000000                     
   217                           ; #config settings
   218                           
   219                           	psect	cinit
   220   0010D8                     __pcinit:
   221                           	callstack 0
   222   0010D8                     start_initialization:
   223                           	callstack 0
   224   0010D8                     __initialization:
   225                           	callstack 0
   226                           
   227                           ; Initialize objects allocated to COMRAM (25 bytes)
   228                           ; load TBLPTR registers with __pidataCOMRAM
   229   0010D8  0E56               	movlw	low __pidataCOMRAM
   230   0010DA  6EF6               	movwf	tblptrl,c
   231   0010DC  0E11               	movlw	high __pidataCOMRAM
   232   0010DE  6EF7               	movwf	tblptrh,c
   233   0010E0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   234   0010E2  6EF8               	movwf	tblptru,c
   235   0010E4  EE00  F04C         	lfsr	0,__pdataCOMRAM
   236   0010E8  EE10 F019          	lfsr	1,25
   237   0010EC                     copy_data0:
   238   0010EC  0009               	tblrd		*+
   239   0010EE  CFF5 FFEE          	movff	tablat,postinc0
   240   0010F2  50E5               	movf	postdec1,w,c
   241   0010F4  50E1               	movf	fsr1l,w,c
   242   0010F6  E1FA               	bnz	copy_data0
   243                           
   244                           ; Clear objects allocated to COMRAM (37 bytes)
   245   0010F8  EE00  F027         	lfsr	0,__pbssCOMRAM
   246   0010FC  0E25               	movlw	37
   247   0010FE                     clear_0:
   248   0010FE  6AEE               	clrf	postinc0,c
   249   001100  06E8               	decf	wreg,f,c
   250   001102  E1FD               	bnz	clear_0
   251   001104                     end_of_initialization:
   252                           	callstack 0
   253   001104                     __end_of__initialization:
   254                           	callstack 0
   255   001104  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256   001106  6EF8               	movwf	tblptru,c
   257   001108  0100               	movlb	0
   258   00110A  EF29  F003         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMRAM
   261   000027                     __pbssCOMRAM:
   262                           	callstack 0
   263   000027                     	ds	32
   264   000047                     _width:
   265                           	callstack 0
   266   000047                     	ds	2
   267   000049                     _prec:
   268                           	callstack 0
   269   000049                     	ds	2
   270   00004B                     _flags:
   271                           	callstack 0
   272   00004B                     	ds	1
   273                           
   274                           	psect	dataCOMRAM
   275   00004C                     __pdataCOMRAM:
   276                           	callstack 0
   277   00004C                     LCD_Set_Latin_Char@F2512:
   278                           	callstack 0
   279   00004C                     	ds	8
   280   000054                     LCD_Set_Latin_Char@F2510:
   281                           	callstack 0
   282   000054                     	ds	8
   283   00005C                     LCD_Set_Latin_Char@F2508:
   284                           	callstack 0
   285   00005C                     	ds	8
   286   000064                     Cursor_Select@state:
   287                           	callstack 0
   288   000064                     	ds	1
   289                           
   290                           	psect	cstackCOMRAM
   291   000001                     __pcstackCOMRAM:
   292                           	callstack 0
   293   000001                     ??_LCD_Instruction:
   294   000001                     ??_putch:
   295   000001                     
   296                           ; 1 bytes @ 0x0
   297   000001                     	ds	1
   298   000002                     LCD_Instruction@instruction:
   299                           	callstack 0
   300   000002                     putch@data:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x1
   304   000002                     	ds	1
   305   000003                     ??_LCD_Clear_Display:
   306   000003                     ??_LCD_Initializer:
   307   000003                     LCD_Move_Cursor@column:
   308                           	callstack 0
   309   000003                     LCD_Set_New_Simbol@simbol:
   310                           	callstack 0
   311   000003                     fputc@c:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x2
   315   000003                     	ds	1
   316   000004                     ??_LCD_Move_Cursor:
   317                           
   318                           ; 1 bytes @ 0x3
   319   000004                     	ds	1
   320   000005                     LCD_Set_New_Simbol@simbol_address:
   321                           	callstack 0
   322   000005                     fputc@fp:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x4
   326   000005                     	ds	1
   327   000006                     LCD_Move_Cursor@line:
   328                           	callstack 0
   329   000006                     LCD_Set_New_Simbol@i:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x5
   333   000006                     	ds	1
   334   000007                     ??_fputc:
   335   000007                     LCD_Set_Latin_Char@c_cedilha:
   336                           	callstack 0
   337                           
   338                           ; 8 bytes @ 0x6
   339   000007                     	ds	5
   340   00000C                     vfpfcnvrt@fp:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0xB
   344   00000C                     	ds	2
   345   00000E                     vfpfcnvrt@fmt:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xD
   349   00000E                     	ds	1
   350   00000F                     LCD_Set_Latin_Char@a_til:
   351                           	callstack 0
   352                           
   353                           ; 8 bytes @ 0xE
   354   00000F                     	ds	1
   355   000010                     vfpfcnvrt@ap:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xF
   359   000010                     	ds	2
   360   000012                     ?_vfprintf:
   361                           	callstack 0
   362   000012                     vfprintf@fp:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x11
   366   000012                     	ds	2
   367   000014                     vfprintf@fmt:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x13
   371   000014                     	ds	2
   372   000016                     vfprintf@ap:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x15
   376   000016                     	ds	1
   377   000017                     LCD_Set_Latin_Char@a_agudo:
   378                           	callstack 0
   379                           
   380                           ; 8 bytes @ 0x16
   381   000017                     	ds	1
   382   000018                     vfprintf@cfmt:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x17
   386   000018                     	ds	2
   387   00001A                     ?_printf:
   388                           	callstack 0
   389   00001A                     printf@fmt:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x19
   393   00001A                     	ds	2
   394   00001C                     printf@ap:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x1B
   398   00001C                     	ds	2
   399   00001E                     Cursor_Select@line:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x1D
   403   00001E                     	ds	1
   404   00001F                     ??_main:
   405                           
   406                           ; 1 bytes @ 0x1E
   407   00001F                     	ds	1
   408   000020                     main@flag_SELECIONA_MENU:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x1F
   412   000020                     	ds	1
   413   000021                     main@flag_ENTER_MENU:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x20
   417   000021                     	ds	1
   418   000022                     main@flag_RETORNA_MENU:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x21
   422   000022                     	ds	1
   423   000023                     main@flag_RETORNA_MENU_state:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x22
   427   000023                     	ds	1
   428   000024                     main@flag_SELECIONA_MENU_state:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x23
   432   000024                     	ds	1
   433   000025                     main@flag_ENTER_MENU_state:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x24
   437   000025                     	ds	1
   438   000026                     main@flag_STATE_MENU:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x25
   442   000026                     	ds	1
   443                           
   444 ;;
   445 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   446 ;;
   447 ;; *************** function _main *****************
   448 ;; Defined at:
   449 ;;		line 15 in file "main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;  flag_STATE_M    1   37[COMRAM] unsigned char 
   454 ;;  flag_ENTER_M    1   36[COMRAM] unsigned char 
   455 ;;  flag_SELECIO    1   35[COMRAM] unsigned char 
   456 ;;  flag_RETORNA    1   34[COMRAM] unsigned char 
   457 ;;  flag_RETORNA    1   33[COMRAM] unsigned char 
   458 ;;  flag_ENTER_M    1   32[COMRAM] unsigned char 
   459 ;;  flag_SELECIO    1   31[COMRAM] unsigned char 
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   469 ;;      Params:         0       0       0       0       0       0       0
   470 ;;      Locals:         7       0       0       0       0       0       0
   471 ;;      Temps:          1       0       0       0       0       0       0
   472 ;;      Totals:         8       0       0       0       0       0       0
   473 ;;Total ram usage:        8 bytes
   474 ;; Hardware stack levels required when called: 6
   475 ;; This function calls:
   476 ;;		_Cursor_Select
   477 ;;		_LCD_Set_Latin_Char
   478 ;;		_System_Initializer
   479 ;;		_Tela_Menu
   480 ;;		_Tela_Option_1
   481 ;;		_Tela_Option_2
   482 ;; This function is called by:
   483 ;;		Startup code after reset
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text0
   488   000652                     __ptext0:
   489                           	callstack 0
   490   000652                     _main:
   491                           	callstack 25
   492   000652  FFFF               	dw	65535	; assembler added errata NOP
   493                           
   494                           ;main.c: 18:     System_Initializer();
   495   000654  ECB8  F008         	call	_System_Initializer	;wreg free
   496   000658                     
   497                           ;main.c: 19:     LCD_Set_Latin_Char();
   498   000658  EC48  F007         	call	_LCD_Set_Latin_Char	;wreg free
   499   00065C                     
   500                           ;main.c: 21:     uint8_t flag_SELECIONA_MENU = 0;
   501   00065C  0E00               	movlw	0
   502   00065E  6E20               	movwf	main@flag_SELECIONA_MENU^0,c
   503   000660                     
   504                           ;main.c: 22:     uint8_t flag_ENTER_MENU = 0;
   505   000660  0E00               	movlw	0
   506   000662  6E21               	movwf	main@flag_ENTER_MENU^0,c
   507   000664                     
   508                           ;main.c: 23:     uint8_t flag_RETORNA_MENU = 0;
   509   000664  0E00               	movlw	0
   510   000666  6E22               	movwf	main@flag_RETORNA_MENU^0,c
   511   000668                     
   512                           ;main.c: 24:     uint8_t flag_STATE_MENU = 1;
   513   000668  0E01               	movlw	1
   514   00066A  6E26               	movwf	main@flag_STATE_MENU^0,c
   515   00066C                     
   516                           ;main.c: 25:     uint8_t flag_RETORNA_MENU_state = 1;
   517   00066C  0E01               	movlw	1
   518   00066E  6E23               	movwf	main@flag_RETORNA_MENU_state^0,c
   519   000670                     
   520                           ;main.c: 26:     uint8_t flag_SELECIONA_MENU_state = 1;
   521   000670  0E01               	movlw	1
   522   000672  6E24               	movwf	main@flag_SELECIONA_MENU_state^0,c
   523   000674                     
   524                           ;main.c: 27:     uint8_t flag_ENTER_MENU_state = 1;
   525   000674  0E01               	movlw	1
   526   000676  6E25               	movwf	main@flag_ENTER_MENU_state^0,c
   527   000678                     
   528                           ;main.c: 29:     Tela_Menu();
   529   000678  EC12  F007         	call	_Tela_Menu	;wreg free
   530   00067C                     
   531                           ;main.c: 30:     Cursor_Select(flag_STATE_MENU);
   532   00067C  0E01               	movlw	1
   533   00067E  EC7E  F007         	call	_Cursor_Select
   534   000682                     l1527:
   535   000682  FFFF               	dw	65535	; assembler added errata NOP
   536                           
   537                           ;main.c: 33:     {;main.c: 35:         if(0 == PORTBbits.RB5)
   538   000684  BA81               	btfsc	129,5,c	;volatile
   539   000686  EF47  F003         	goto	u991
   540   00068A  EF4A  F003         	goto	u990
   541   00068E                     u991:
   542   00068E  FFFF               	dw	65535	; assembler added errata NOP
   543   000690  EF57  F003         	goto	l22
   544   000694                     u990:
   545   000694  FFFF               	dw	65535	; assembler added errata NOP
   546   000696                     
   547                           ;main.c: 36:         {;main.c: 37:             _delay((unsigned long)((20)*(8000000/4000
      +                          .0)));
   548   000696  0E27               	movlw	39
   549   000698  6E1F               	movwf	??_main^0,c
   550   00069A  0EFC               	movlw	252
   551   00069C                     u1157:
   552   00069C  FFFF               	dw	65535	; errata NOP
   553   00069E  2EE8               	decfsz	wreg,f,c
   554   0006A0  D7FD               	bra	u1157
   555   0006A2  2E1F               	decfsz	??_main^0,f,c
   556   0006A4  D7FB               	bra	u1157
   557   0006A6                     
   558                           ;main.c: 38:             flag_SELECIONA_MENU = 1;
   559   0006A6  0E01               	movlw	1
   560   0006A8  6E20               	movwf	main@flag_SELECIONA_MENU^0,c
   561                           
   562                           ;main.c: 39:         }
   563   0006AA  EF6D  F003         	goto	l1539
   564   0006AE                     l22:
   565   0006AE  FFFF               	dw	65535	; assembler added errata NOP
   566   0006B0  AA81               	btfss	129,5,c	;volatile
   567   0006B2  EF5D  F003         	goto	u1001
   568   0006B6  EF60  F003         	goto	u1000
   569   0006BA                     u1001:
   570   0006BA  FFFF               	dw	65535	; assembler added errata NOP
   571   0006BC  EF6D  F003         	goto	l1539
   572   0006C0                     u1000:
   573   0006C0  FFFF               	dw	65535	; assembler added errata NOP
   574   0006C2                     
   575                           ;main.c: 41:         {;main.c: 42:             _delay((unsigned long)((20)*(8000000/4000
      +                          .0)));
   576   0006C2  0E27               	movlw	39
   577   0006C4  6E1F               	movwf	??_main^0,c
   578   0006C6  0EFC               	movlw	252
   579   0006C8                     u1167:
   580   0006C8  FFFF               	dw	65535	; errata NOP
   581   0006CA  2EE8               	decfsz	wreg,f,c
   582   0006CC  D7FD               	bra	u1167
   583   0006CE  2E1F               	decfsz	??_main^0,f,c
   584   0006D0  D7FB               	bra	u1167
   585   0006D2                     
   586                           ;main.c: 43:             flag_SELECIONA_MENU = 0;
   587   0006D2  0E00               	movlw	0
   588   0006D4  6E20               	movwf	main@flag_SELECIONA_MENU^0,c
   589   0006D6                     
   590                           ;main.c: 44:             flag_SELECIONA_MENU_state = 1;
   591   0006D6  0E01               	movlw	1
   592   0006D8  6E24               	movwf	main@flag_SELECIONA_MENU_state^0,c
   593   0006DA                     l1539:
   594   0006DA  FFFF               	dw	65535	; assembler added errata NOP
   595                           
   596                           ;main.c: 47:         if(0 == PORTBbits.RB4)
   597   0006DC  B881               	btfsc	129,4,c	;volatile
   598   0006DE  EF73  F003         	goto	u1011
   599   0006E2  EF76  F003         	goto	u1010
   600   0006E6                     u1011:
   601   0006E6  FFFF               	dw	65535	; assembler added errata NOP
   602   0006E8  EF83  F003         	goto	l25
   603   0006EC                     u1010:
   604   0006EC  FFFF               	dw	65535	; assembler added errata NOP
   605   0006EE                     
   606                           ;main.c: 48:         {;main.c: 49:             _delay((unsigned long)((20)*(8000000/4000
      +                          .0)));
   607   0006EE  0E27               	movlw	39
   608   0006F0  6E1F               	movwf	??_main^0,c
   609   0006F2  0EFC               	movlw	252
   610   0006F4                     u1177:
   611   0006F4  FFFF               	dw	65535	; errata NOP
   612   0006F6  2EE8               	decfsz	wreg,f,c
   613   0006F8  D7FD               	bra	u1177
   614   0006FA  2E1F               	decfsz	??_main^0,f,c
   615   0006FC  D7FB               	bra	u1177
   616   0006FE                     
   617                           ;main.c: 50:             flag_ENTER_MENU = 1;
   618   0006FE  0E01               	movlw	1
   619   000700  6E21               	movwf	main@flag_ENTER_MENU^0,c
   620                           
   621                           ;main.c: 51:         }
   622   000702  EF97  F003         	goto	l1549
   623   000706                     l25:
   624   000706  FFFF               	dw	65535	; assembler added errata NOP
   625   000708  A881               	btfss	129,4,c	;volatile
   626   00070A  EF89  F003         	goto	u1021
   627   00070E  EF8C  F003         	goto	u1020
   628   000712                     u1021:
   629   000712  FFFF               	dw	65535	; assembler added errata NOP
   630   000714  EF97  F003         	goto	l1549
   631   000718                     u1020:
   632   000718  FFFF               	dw	65535	; assembler added errata NOP
   633   00071A                     
   634                           ;main.c: 53:         {;main.c: 54:             _delay((unsigned long)((20)*(8000000/4000
      +                          .0)));
   635   00071A  0E27               	movlw	39
   636   00071C  6E1F               	movwf	??_main^0,c
   637   00071E  0EFC               	movlw	252
   638   000720                     u1187:
   639   000720  FFFF               	dw	65535	; errata NOP
   640   000722  2EE8               	decfsz	wreg,f,c
   641   000724  D7FD               	bra	u1187
   642   000726  2E1F               	decfsz	??_main^0,f,c
   643   000728  D7FB               	bra	u1187
   644   00072A                     
   645                           ;main.c: 55:             flag_ENTER_MENU = 0;
   646   00072A  0E00               	movlw	0
   647   00072C  6E21               	movwf	main@flag_ENTER_MENU^0,c
   648   00072E                     l1549:
   649   00072E  FFFF               	dw	65535	; assembler added errata NOP
   650                           
   651                           ;main.c: 58:         if(0 == PORTBbits.RB3)
   652   000730  B681               	btfsc	129,3,c	;volatile
   653   000732  EF9D  F003         	goto	u1031
   654   000736  EFA0  F003         	goto	u1030
   655   00073A                     u1031:
   656   00073A  FFFF               	dw	65535	; assembler added errata NOP
   657   00073C  EFAD  F003         	goto	l28
   658   000740                     u1030:
   659   000740  FFFF               	dw	65535	; assembler added errata NOP
   660   000742                     
   661                           ;main.c: 59:         {;main.c: 60:             _delay((unsigned long)((20)*(8000000/4000
      +                          .0)));
   662   000742  0E27               	movlw	39
   663   000744  6E1F               	movwf	??_main^0,c
   664   000746  0EFC               	movlw	252
   665   000748                     u1197:
   666   000748  FFFF               	dw	65535	; errata NOP
   667   00074A  2EE8               	decfsz	wreg,f,c
   668   00074C  D7FD               	bra	u1197
   669   00074E  2E1F               	decfsz	??_main^0,f,c
   670   000750  D7FB               	bra	u1197
   671   000752                     
   672                           ;main.c: 61:             flag_RETORNA_MENU = 1;
   673   000752  0E01               	movlw	1
   674   000754  6E22               	movwf	main@flag_RETORNA_MENU^0,c
   675                           
   676                           ;main.c: 62:         }
   677   000756  EFC3  F003         	goto	l1561
   678   00075A                     l28:
   679   00075A  FFFF               	dw	65535	; assembler added errata NOP
   680   00075C  A681               	btfss	129,3,c	;volatile
   681   00075E  EFB3  F003         	goto	u1041
   682   000762  EFB6  F003         	goto	u1040
   683   000766                     u1041:
   684   000766  FFFF               	dw	65535	; assembler added errata NOP
   685   000768  EFC3  F003         	goto	l1561
   686   00076C                     u1040:
   687   00076C  FFFF               	dw	65535	; assembler added errata NOP
   688   00076E                     
   689                           ;main.c: 64:         {;main.c: 65:             _delay((unsigned long)((20)*(8000000/4000
      +                          .0)));
   690   00076E  0E27               	movlw	39
   691   000770  6E1F               	movwf	??_main^0,c
   692   000772  0EFC               	movlw	252
   693   000774                     u1207:
   694   000774  FFFF               	dw	65535	; errata NOP
   695   000776  2EE8               	decfsz	wreg,f,c
   696   000778  D7FD               	bra	u1207
   697   00077A  2E1F               	decfsz	??_main^0,f,c
   698   00077C  D7FB               	bra	u1207
   699   00077E                     
   700                           ;main.c: 66:             flag_RETORNA_MENU = 0;
   701   00077E  0E00               	movlw	0
   702   000780  6E22               	movwf	main@flag_RETORNA_MENU^0,c
   703   000782                     
   704                           ;main.c: 67:             flag_RETORNA_MENU_state = 1;
   705   000782  0E01               	movlw	1
   706   000784  6E23               	movwf	main@flag_RETORNA_MENU_state^0,c
   707   000786                     l1561:
   708   000786  FFFF               	dw	65535	; assembler added errata NOP
   709                           
   710                           ;main.c: 72:         if((1 == flag_SELECIONA_MENU)&&(1 == flag_SELECIONA_MENU_state)&&(1
      +                           == flag_ENTER_MENU_state))
   711   000788  0420               	decf	main@flag_SELECIONA_MENU^0,w,c
   712   00078A  A4D8               	btfss	status,2,c
   713   00078C  EFCA  F003         	goto	u1051
   714   000790  EFCD  F003         	goto	u1050
   715   000794                     u1051:
   716   000794  FFFF               	dw	65535	; assembler added errata NOP
   717   000796  EFFB  F003         	goto	l1577
   718   00079A                     u1050:
   719   00079A  FFFF               	dw	65535	; assembler added errata NOP
   720   00079C  0424               	decf	main@flag_SELECIONA_MENU_state^0,w,c
   721   00079E  A4D8               	btfss	status,2,c
   722   0007A0  EFD4  F003         	goto	u1061
   723   0007A4  EFD7  F003         	goto	u1060
   724   0007A8                     u1061:
   725   0007A8  FFFF               	dw	65535	; assembler added errata NOP
   726   0007AA  EFFB  F003         	goto	l1577
   727   0007AE                     u1060:
   728   0007AE  FFFF               	dw	65535	; assembler added errata NOP
   729   0007B0  0425               	decf	main@flag_ENTER_MENU_state^0,w,c
   730   0007B2  A4D8               	btfss	status,2,c
   731   0007B4  EFDE  F003         	goto	u1071
   732   0007B8  EFE1  F003         	goto	u1070
   733   0007BC                     u1071:
   734   0007BC  FFFF               	dw	65535	; assembler added errata NOP
   735   0007BE  EFFB  F003         	goto	l1577
   736   0007C2                     u1070:
   737   0007C2  FFFF               	dw	65535	; assembler added errata NOP
   738   0007C4                     
   739                           ;main.c: 73:         {;main.c: 74:             1 != flag_STATE_MENU ? (flag_STATE_MENU =
      +                           1) : (flag_STATE_MENU = 2);
   740   0007C4  0426               	decf	main@flag_STATE_MENU^0,w,c
   741   0007C6  B4D8               	btfsc	status,2,c
   742   0007C8  EFE8  F003         	goto	u1081
   743   0007CC  EFEB  F003         	goto	u1080
   744   0007D0                     u1081:
   745   0007D0  FFFF               	dw	65535	; assembler added errata NOP
   746   0007D2  EFF0  F003         	goto	l1571
   747   0007D6                     u1080:
   748   0007D6  FFFF               	dw	65535	; assembler added errata NOP
   749   0007D8  0E01               	movlw	1
   750   0007DA  6E26               	movwf	main@flag_STATE_MENU^0,c
   751   0007DC  EFF3  F003         	goto	l1573
   752   0007E0                     l1571:
   753   0007E0  FFFF               	dw	65535	; assembler added errata NOP
   754   0007E2  0E02               	movlw	2
   755   0007E4  6E26               	movwf	main@flag_STATE_MENU^0,c
   756   0007E6                     l1573:
   757   0007E6  FFFF               	dw	65535	; assembler added errata NOP
   758                           
   759                           ;main.c: 75:             Cursor_Select(flag_STATE_MENU);
   760   0007E8  5026               	movf	main@flag_STATE_MENU^0,w,c
   761   0007EA  EC7E  F007         	call	_Cursor_Select
   762   0007EE                     
   763                           ;main.c: 76:             flag_SELECIONA_MENU_state = 0;
   764   0007EE  0E00               	movlw	0
   765   0007F0  6E24               	movwf	main@flag_SELECIONA_MENU_state^0,c
   766                           
   767                           ;main.c: 77:         }
   768   0007F2  EF41  F003         	goto	l1527
   769   0007F6                     l1577:
   770   0007F6  FFFF               	dw	65535	; assembler added errata NOP
   771   0007F8  0421               	decf	main@flag_ENTER_MENU^0,w,c
   772   0007FA  A4D8               	btfss	status,2,c
   773   0007FC  EF02  F004         	goto	u1091
   774   000800  EF05  F004         	goto	u1090
   775   000804                     u1091:
   776   000804  FFFF               	dw	65535	; assembler added errata NOP
   777   000806  EF30  F004         	goto	l1591
   778   00080A                     u1090:
   779   00080A  FFFF               	dw	65535	; assembler added errata NOP
   780   00080C  0425               	decf	main@flag_ENTER_MENU_state^0,w,c
   781   00080E  A4D8               	btfss	status,2,c
   782   000810  EF0C  F004         	goto	u1101
   783   000814  EF0F  F004         	goto	u1100
   784   000818                     u1101:
   785   000818  FFFF               	dw	65535	; assembler added errata NOP
   786   00081A  EF30  F004         	goto	l1591
   787   00081E                     u1100:
   788   00081E  FFFF               	dw	65535	; assembler added errata NOP
   789   000820                     
   790                           ;main.c: 79:         {;main.c: 80:             flag_ENTER_MENU_state = 0;
   791   000820  0E00               	movlw	0
   792   000822  6E25               	movwf	main@flag_ENTER_MENU_state^0,c
   793   000824                     
   794                           ;main.c: 81:             if(1 == flag_STATE_MENU)
   795   000824  0426               	decf	main@flag_STATE_MENU^0,w,c
   796   000826  A4D8               	btfss	status,2,c
   797   000828  EF18  F004         	goto	u1111
   798   00082C  EF1B  F004         	goto	u1110
   799   000830                     u1111:
   800   000830  FFFF               	dw	65535	; assembler added errata NOP
   801   000832  EF20  F004         	goto	l1587
   802   000836                     u1110:
   803   000836  FFFF               	dw	65535	; assembler added errata NOP
   804   000838                     
   805                           ;main.c: 82:                 Tela_Option_1();
   806   000838  EC04  F008         	call	_Tela_Option_1	;wreg free
   807   00083C  EF41  F003         	goto	l1527
   808   000840                     l1587:
   809   000840  FFFF               	dw	65535	; assembler added errata NOP
   810   000842  0E02               	movlw	2
   811   000844  1826               	xorwf	main@flag_STATE_MENU^0,w,c
   812   000846  A4D8               	btfss	status,2,c
   813   000848  EF28  F004         	goto	u1121
   814   00084C  EF2B  F004         	goto	u1120
   815   000850                     u1121:
   816   000850  FFFF               	dw	65535	; assembler added errata NOP
   817   000852  EF50  F004         	goto	l36
   818   000856                     u1120:
   819   000856  FFFF               	dw	65535	; assembler added errata NOP
   820   000858                     
   821                           ;main.c: 84:                 Tela_Option_2();
   822   000858  ECDE  F007         	call	_Tela_Option_2	;wreg free
   823   00085C  EF41  F003         	goto	l1527
   824   000860                     l1591:
   825   000860  FFFF               	dw	65535	; assembler added errata NOP
   826   000862  0422               	decf	main@flag_RETORNA_MENU^0,w,c
   827   000864  A4D8               	btfss	status,2,c
   828   000866  EF37  F004         	goto	u1131
   829   00086A  EF3A  F004         	goto	u1130
   830   00086E                     u1131:
   831   00086E  FFFF               	dw	65535	; assembler added errata NOP
   832   000870  EF50  F004         	goto	l36
   833   000874                     u1130:
   834   000874  FFFF               	dw	65535	; assembler added errata NOP
   835   000876  0423               	decf	main@flag_RETORNA_MENU_state^0,w,c
   836   000878  A4D8               	btfss	status,2,c
   837   00087A  EF41  F004         	goto	u1141
   838   00087E  EF44  F004         	goto	u1140
   839   000882                     u1141:
   840   000882  FFFF               	dw	65535	; assembler added errata NOP
   841   000884  EF50  F004         	goto	l36
   842   000888                     u1140:
   843   000888  FFFF               	dw	65535	; assembler added errata NOP
   844   00088A                     
   845                           ;main.c: 87:         {;main.c: 88:             Tela_Menu();
   846   00088A  EC12  F007         	call	_Tela_Menu	;wreg free
   847                           
   848                           ;main.c: 89:             Cursor_Select(flag_STATE_MENU);
   849   00088E  5026               	movf	main@flag_STATE_MENU^0,w,c
   850   000890  EC7E  F007         	call	_Cursor_Select
   851   000894                     
   852                           ;main.c: 90:             flag_RETORNA_MENU_state = 0;
   853   000894  0E00               	movlw	0
   854   000896  6E23               	movwf	main@flag_RETORNA_MENU_state^0,c
   855   000898                     
   856                           ;main.c: 91:             flag_ENTER_MENU_state = 1;
   857   000898  0E01               	movlw	1
   858   00089A  6E25               	movwf	main@flag_ENTER_MENU_state^0,c
   859   00089C  EF41  F003         	goto	l1527
   860   0008A0                     l36:
   861   0008A0  FFFF               	dw	65535	; assembler added errata NOP
   862   0008A2  EF41  F003         	goto	l1527
   863   0008A6  EF01  F000         	goto	start
   864   0008AA                     __end_of_main:
   865                           	callstack 0
   866                           
   867 ;; *************** function _Tela_Option_2 *****************
   868 ;; Defined at:
   869 ;;		line 41 in file "screen.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   883 ;;      Params:         0       0       0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0       0       0
   886 ;;      Totals:         0       0       0       0       0       0       0
   887 ;;Total ram usage:        0 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 5
   890 ;; This function calls:
   891 ;;		_LCD_Clear_Display
   892 ;;		_LCD_Move_Cursor
   893 ;;		_printf
   894 ;;		_putch
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text1
   901   000FBC                     __ptext1:
   902                           	callstack 0
   903   000FBC                     _Tela_Option_2:
   904                           	callstack 0
   905   000FBC  FFFF               	dw	65535	; assembler added errata NOP
   906   000FBE                     
   907                           ;screen.c: 43:     LCD_Clear_Display();
   908   000FBE  EC9C  F008         	call	_LCD_Clear_Display	;wreg free
   909   000FC2                     
   910                           ;screen.c: 44:     printf("op  o 2");
   911   000FC2  0E3E               	movlw	low STR_5
   912   000FC4  6E1A               	movwf	printf@fmt^0,c
   913   000FC6  0E06               	movlw	high STR_5
   914   000FC8  6E1B               	movwf	(printf@fmt+1)^0,c
   915   000FCA  EC87  F008         	call	_printf	;wreg free
   916   000FCE                     
   917                           ;screen.c: 45:     LCD_Move_Cursor(1,3);
   918   000FCE  0E03               	movlw	3
   919   000FD0  6E03               	movwf	LCD_Move_Cursor@column^0,c
   920   000FD2  0E01               	movlw	1
   921   000FD4  EC74  F006         	call	_LCD_Move_Cursor
   922   000FD8                     
   923                           ;screen.c: 46:     putch(0);
   924   000FD8  0E00               	movlw	0
   925   000FDA  EC55  F004         	call	_putch
   926   000FDE                     
   927                           ;screen.c: 47:     LCD_Move_Cursor(1,4);
   928   000FDE  0E04               	movlw	4
   929   000FE0  6E03               	movwf	LCD_Move_Cursor@column^0,c
   930   000FE2  0E01               	movlw	1
   931   000FE4  EC74  F006         	call	_LCD_Move_Cursor
   932   000FE8                     
   933                           ;screen.c: 48:     putch(1);
   934   000FE8  0E01               	movlw	1
   935   000FEA  EC55  F004         	call	_putch
   936   000FEE                     
   937                           ;screen.c: 50:     LCD_Move_Cursor(2,1);
   938   000FEE  0E01               	movlw	1
   939   000FF0  6E03               	movwf	LCD_Move_Cursor@column^0,c
   940   000FF2  0E02               	movlw	2
   941   000FF4  EC74  F006         	call	_LCD_Move_Cursor
   942                           
   943                           ;screen.c: 51:     printf("voltar<<press B2");
   944   000FF8  0E25               	movlw	low STR_4
   945   000FFA  6E1A               	movwf	printf@fmt^0,c
   946   000FFC  0E06               	movlw	high STR_4
   947   000FFE  6E1B               	movwf	(printf@fmt+1)^0,c
   948   001000  EC87  F008         	call	_printf	;wreg free
   949   001004  0012               	return		;funcret
   950   001006  FFFF               	dw	65535	; errata NOP
   951   001008                     __end_of_Tela_Option_2:
   952                           	callstack 0
   953                           
   954 ;; *************** function _Tela_Option_1 *****************
   955 ;; Defined at:
   956 ;;		line 28 in file "screen.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         0       0       0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 5
   977 ;; This function calls:
   978 ;;		_LCD_Clear_Display
   979 ;;		_LCD_Move_Cursor
   980 ;;		_printf
   981 ;;		_putch
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text2
   988   001008                     __ptext2:
   989                           	callstack 0
   990   001008                     _Tela_Option_1:
   991                           	callstack 0
   992   001008  FFFF               	dw	65535	; assembler added errata NOP
   993   00100A                     
   994                           ;screen.c: 30:     LCD_Clear_Display();
   995   00100A  EC9C  F008         	call	_LCD_Clear_Display	;wreg free
   996   00100E                     
   997                           ;screen.c: 31:     printf("op  o 1");
   998   00100E  0E36               	movlw	low STR_3
   999   001010  6E1A               	movwf	printf@fmt^0,c
  1000   001012  0E06               	movlw	high STR_3
  1001   001014  6E1B               	movwf	(printf@fmt+1)^0,c
  1002   001016  EC87  F008         	call	_printf	;wreg free
  1003   00101A                     
  1004                           ;screen.c: 32:     LCD_Move_Cursor(1,3);
  1005   00101A  0E03               	movlw	3
  1006   00101C  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1007   00101E  0E01               	movlw	1
  1008   001020  EC74  F006         	call	_LCD_Move_Cursor
  1009   001024                     
  1010                           ;screen.c: 33:     putch(0);
  1011   001024  0E00               	movlw	0
  1012   001026  EC55  F004         	call	_putch
  1013   00102A                     
  1014                           ;screen.c: 34:     LCD_Move_Cursor(1,4);
  1015   00102A  0E04               	movlw	4
  1016   00102C  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1017   00102E  0E01               	movlw	1
  1018   001030  EC74  F006         	call	_LCD_Move_Cursor
  1019   001034                     
  1020                           ;screen.c: 35:     putch(1);
  1021   001034  0E01               	movlw	1
  1022   001036  EC55  F004         	call	_putch
  1023   00103A                     
  1024                           ;screen.c: 37:     LCD_Move_Cursor(2,1);
  1025   00103A  0E01               	movlw	1
  1026   00103C  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1027   00103E  0E02               	movlw	2
  1028   001040  EC74  F006         	call	_LCD_Move_Cursor
  1029                           
  1030                           ;screen.c: 38:     printf("voltar<<press B2");
  1031   001044  0E25               	movlw	low STR_4
  1032   001046  6E1A               	movwf	printf@fmt^0,c
  1033   001048  0E06               	movlw	high STR_4
  1034   00104A  6E1B               	movwf	(printf@fmt+1)^0,c
  1035   00104C  EC87  F008         	call	_printf	;wreg free
  1036   001050  0012               	return		;funcret
  1037   001052  FFFF               	dw	65535	; errata NOP
  1038   001054                     __end_of_Tela_Option_1:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _Tela_Menu *****************
  1042 ;; Defined at:
  1043 ;;		line 11 in file "screen.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1057 ;;      Params:         0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 5
  1064 ;; This function calls:
  1065 ;;		_LCD_Clear_Display
  1066 ;;		_LCD_Move_Cursor
  1067 ;;		_printf
  1068 ;;		_putch
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text3
  1075   000E24                     __ptext3:
  1076                           	callstack 0
  1077   000E24                     _Tela_Menu:
  1078                           	callstack 0
  1079   000E24  FFFF               	dw	65535	; assembler added errata NOP
  1080   000E26                     
  1081                           ;screen.c: 13:     LCD_Clear_Display();
  1082   000E26  EC9C  F008         	call	_LCD_Clear_Display	;wreg free
  1083   000E2A                     
  1084                           ;screen.c: 14:     printf("  op  o 1        ");
  1085   000E2A  0E01               	movlw	low STR_1
  1086   000E2C  6E1A               	movwf	printf@fmt^0,c
  1087   000E2E  0E06               	movlw	high STR_1
  1088   000E30  6E1B               	movwf	(printf@fmt+1)^0,c
  1089   000E32  EC87  F008         	call	_printf	;wreg free
  1090   000E36                     
  1091                           ;screen.c: 15:     LCD_Move_Cursor(1,5);
  1092   000E36  0E05               	movlw	5
  1093   000E38  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1094   000E3A  0E01               	movlw	1
  1095   000E3C  EC74  F006         	call	_LCD_Move_Cursor
  1096   000E40                     
  1097                           ;screen.c: 16:     putch(0);
  1098   000E40  0E00               	movlw	0
  1099   000E42  EC55  F004         	call	_putch
  1100   000E46                     
  1101                           ;screen.c: 17:     LCD_Move_Cursor(1,6);
  1102   000E46  0E06               	movlw	6
  1103   000E48  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1104   000E4A  0E01               	movlw	1
  1105   000E4C  EC74  F006         	call	_LCD_Move_Cursor
  1106   000E50                     
  1107                           ;screen.c: 18:     putch(1);
  1108   000E50  0E01               	movlw	1
  1109   000E52  EC55  F004         	call	_putch
  1110   000E56                     
  1111                           ;screen.c: 20:     LCD_Move_Cursor(2,1);
  1112   000E56  0E01               	movlw	1
  1113   000E58  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1114   000E5A  0E02               	movlw	2
  1115   000E5C  EC74  F006         	call	_LCD_Move_Cursor
  1116                           
  1117                           ;screen.c: 21:     printf("  op  o 2        ");
  1118   000E60  0E13               	movlw	low STR_2
  1119   000E62  6E1A               	movwf	printf@fmt^0,c
  1120   000E64  0E06               	movlw	high STR_2
  1121   000E66  6E1B               	movwf	(printf@fmt+1)^0,c
  1122   000E68  EC87  F008         	call	_printf	;wreg free
  1123   000E6C                     
  1124                           ;screen.c: 22:     LCD_Move_Cursor(2,5);
  1125   000E6C  0E05               	movlw	5
  1126   000E6E  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1127   000E70  0E02               	movlw	2
  1128   000E72  EC74  F006         	call	_LCD_Move_Cursor
  1129   000E76                     
  1130                           ;screen.c: 23:     putch(0);
  1131   000E76  0E00               	movlw	0
  1132   000E78  EC55  F004         	call	_putch
  1133   000E7C                     
  1134                           ;screen.c: 24:     LCD_Move_Cursor(2,6);
  1135   000E7C  0E06               	movlw	6
  1136   000E7E  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1137   000E80  0E02               	movlw	2
  1138   000E82  EC74  F006         	call	_LCD_Move_Cursor
  1139   000E86                     
  1140                           ;screen.c: 25:     putch(1);
  1141   000E86  0E01               	movlw	1
  1142   000E88  EC55  F004         	call	_putch
  1143   000E8C  0012               	return		;funcret
  1144   000E8E  FFFF               	dw	65535	; errata NOP
  1145   000E90                     __end_of_Tela_Menu:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _LCD_Clear_Display *****************
  1149 ;; Defined at:
  1150 ;;		line 123 in file "lcd_4bit_Mode.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1164 ;;      Params:         0       0       0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0
  1166 ;;      Temps:          1       0       0       0       0       0       0
  1167 ;;      Totals:         1       0       0       0       0       0       0
  1168 ;;Total ram usage:        1 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; Hardware stack levels required when called: 1
  1171 ;; This function calls:
  1172 ;;		_LCD_Instruction
  1173 ;; This function is called by:
  1174 ;;		_Tela_Menu
  1175 ;;		_Tela_Option_1
  1176 ;;		_Tela_Option_2
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text4
  1181   001138                     __ptext4:
  1182                           	callstack 0
  1183   001138                     _LCD_Clear_Display:
  1184                           	callstack 0
  1185   001138  FFFF               	dw	65535	; assembler added errata NOP
  1186   00113A                     
  1187                           ;lcd_4bit_Mode.c: 125:     LCD_Instruction(0x01);
  1188   00113A  0E01               	movlw	1
  1189   00113C  EC0B  F005         	call	_LCD_Instruction
  1190   001140                     
  1191                           ;lcd_4bit_Mode.c: 126:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1192   001140  0E04               	movlw	4
  1193   001142  6E03               	movwf	??_LCD_Clear_Display^0,c
  1194   001144  0EE5               	movlw	229
  1195   001146                     u1217:
  1196   001146  FFFF               	dw	65535	; errata NOP
  1197   001148  2EE8               	decfsz	wreg,f,c
  1198   00114A  D7FD               	bra	u1217
  1199   00114C  2E03               	decfsz	??_LCD_Clear_Display^0,f,c
  1200   00114E  D7FB               	bra	u1217
  1201   001150  D000               	nop2	
  1202   001152  0012               	return		;funcret
  1203   001154  FFFF               	dw	65535	; errata NOP
  1204   001156                     __end_of_LCD_Clear_Display:
  1205                           	callstack 0
  1206                           
  1207 ;; *************** function _System_Initializer *****************
  1208 ;; Defined at:
  1209 ;;		line 21 in file "system.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1223 ;;      Params:         0       0       0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; Hardware stack levels required when called: 2
  1230 ;; This function calls:
  1231 ;;		_IO_Initializer
  1232 ;;		_LCD_Initializer
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text5
  1239   001170                     __ptext5:
  1240                           	callstack 0
  1241   001170                     _System_Initializer:
  1242                           	callstack 0
  1243   001170  FFFF               	dw	65535	; assembler added errata NOP
  1244   001172                     
  1245                           ;system.c: 23:     IO_Initializer();
  1246   001172  EC4E  F008         	call	_IO_Initializer	;wreg free
  1247   001176                     
  1248                           ;system.c: 24:     LCD_Initializer();
  1249   001176  ECC1  F005         	call	_LCD_Initializer	;wreg free
  1250   00117A  0012               	return		;funcret
  1251   00117C  FFFF               	dw	65535	; errata NOP
  1252   00117E                     __end_of_System_Initializer:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _LCD_Initializer *****************
  1256 ;; Defined at:
  1257 ;;		line 212 in file "lcd_4bit_Mode.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1271 ;;      Params:         0       0       0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0
  1273 ;;      Temps:          1       0       0       0       0       0       0
  1274 ;;      Totals:         1       0       0       0       0       0       0
  1275 ;;Total ram usage:        1 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; Hardware stack levels required when called: 1
  1278 ;; This function calls:
  1279 ;;		_LCD_Instruction
  1280 ;; This function is called by:
  1281 ;;		_System_Initializer
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text6
  1286   000B82                     __ptext6:
  1287                           	callstack 0
  1288   000B82                     _LCD_Initializer:
  1289                           	callstack 0
  1290   000B82  FFFF               	dw	65535	; assembler added errata NOP
  1291   000B84                     
  1292                           ;lcd_4bit_Mode.c: 214:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1293   000B84  0E4E               	movlw	78
  1294   000B86  6E03               	movwf	??_LCD_Initializer^0,c
  1295   000B88  0EF8               	movlw	248
  1296   000B8A                     u1227:
  1297   000B8A  FFFF               	dw	65535	; errata NOP
  1298   000B8C  2EE8               	decfsz	wreg,f,c
  1299   000B8E  D7FD               	bra	u1227
  1300   000B90  2E03               	decfsz	??_LCD_Initializer^0,f,c
  1301   000B92  D7FB               	bra	u1227
  1302   000B94  D000               	nop2	
  1303   000B96                     
  1304                           ;lcd_4bit_Mode.c: 215:     LATDbits.LATD2 = 0;
  1305   000B96  948C               	bcf	140,2,c	;volatile
  1306   000B98                     
  1307                           ;lcd_4bit_Mode.c: 217:     LATDbits.LATD3 = 1;
  1308   000B98  868C               	bsf	140,3,c	;volatile
  1309   000B9A  9E8B               	bcf	139,7,c	;volatile
  1310   000B9C  9C8B               	bcf	139,6,c	;volatile
  1311   000B9E  8A8B               	bsf	139,5,c	;volatile
  1312   000BA0  888B               	bsf	139,4,c	;volatile
  1313   000BA2                     
  1314                           ;lcd_4bit_Mode.c: 219:     LATDbits.LATD3 = 0;
  1315   000BA2  968C               	bcf	140,3,c	;volatile
  1316                           
  1317                           ;lcd_4bit_Mode.c: 220:     _delay((unsigned long)((45)*(8000000/4000000.0)));
  1318   000BA4  0E16               	movlw	22
  1319   000BA6                     u1237:
  1320   000BA6  FFFF               	dw	65535	; errata NOP
  1321   000BA8  2EE8               	decfsz	wreg,f,c
  1322   000BAA  D7FD               	bra	u1237
  1323   000BAC  D000               	nop2	
  1324                           
  1325                           ;lcd_4bit_Mode.c: 222:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1326   000BAE  0E0A               	movlw	10
  1327   000BB0  6E03               	movwf	??_LCD_Initializer^0,c
  1328   000BB2  0EBE               	movlw	190
  1329   000BB4                     u1247:
  1330   000BB4  FFFF               	dw	65535	; errata NOP
  1331   000BB6  2EE8               	decfsz	wreg,f,c
  1332   000BB8  D7FD               	bra	u1247
  1333   000BBA  2E03               	decfsz	??_LCD_Initializer^0,f,c
  1334   000BBC  D7FB               	bra	u1247
  1335   000BBE  D000               	nop2	
  1336   000BC0                     
  1337                           ;lcd_4bit_Mode.c: 224:     LATDbits.LATD3 = 1;
  1338   000BC0  868C               	bsf	140,3,c	;volatile
  1339   000BC2  9E8B               	bcf	139,7,c	;volatile
  1340   000BC4  9C8B               	bcf	139,6,c	;volatile
  1341   000BC6  8A8B               	bsf	139,5,c	;volatile
  1342   000BC8  888B               	bsf	139,4,c	;volatile
  1343   000BCA                     
  1344                           ;lcd_4bit_Mode.c: 226:     LATDbits.LATD3 = 0;
  1345   000BCA  968C               	bcf	140,3,c	;volatile
  1346                           
  1347                           ;lcd_4bit_Mode.c: 227:     _delay((unsigned long)((45)*(8000000/4000000.0)));
  1348   000BCC  0E16               	movlw	22
  1349   000BCE                     u1257:
  1350   000BCE  FFFF               	dw	65535	; errata NOP
  1351   000BD0  2EE8               	decfsz	wreg,f,c
  1352   000BD2  D7FD               	bra	u1257
  1353   000BD4  D000               	nop2	
  1354                           
  1355                           ;lcd_4bit_Mode.c: 229:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  1356   000BD6  0EC8               	movlw	200
  1357   000BD8                     u1267:
  1358   000BD8  FFFF               	dw	65535	; errata NOP
  1359   000BDA  F000               	nop	
  1360   000BDC  2EE8               	decfsz	wreg,f,c
  1361   000BDE  D7FC               	bra	u1267
  1362   000BE0                     
  1363                           ;lcd_4bit_Mode.c: 231:     LATDbits.LATD3 = 1;
  1364   000BE0  868C               	bsf	140,3,c	;volatile
  1365   000BE2  9E8B               	bcf	139,7,c	;volatile
  1366   000BE4  9C8B               	bcf	139,6,c	;volatile
  1367   000BE6  8A8B               	bsf	139,5,c	;volatile
  1368   000BE8  888B               	bsf	139,4,c	;volatile
  1369   000BEA                     
  1370                           ;lcd_4bit_Mode.c: 233:     LATDbits.LATD3 = 0;
  1371   000BEA  968C               	bcf	140,3,c	;volatile
  1372                           
  1373                           ;lcd_4bit_Mode.c: 234:     _delay((unsigned long)((45)*(8000000/4000000.0)));
  1374   000BEC  0E16               	movlw	22
  1375   000BEE                     u1277:
  1376   000BEE  FFFF               	dw	65535	; errata NOP
  1377   000BF0  2EE8               	decfsz	wreg,f,c
  1378   000BF2  D7FD               	bra	u1277
  1379   000BF4  D000               	nop2	
  1380   000BF6                     
  1381                           ;lcd_4bit_Mode.c: 236:     LATDbits.LATD3 = 1;
  1382   000BF6  868C               	bsf	140,3,c	;volatile
  1383   000BF8  9E8B               	bcf	139,7,c	;volatile
  1384   000BFA  9C8B               	bcf	139,6,c	;volatile
  1385   000BFC  8A8B               	bsf	139,5,c	;volatile
  1386   000BFE  988B               	bcf	139,4,c	;volatile
  1387   000C00                     
  1388                           ;lcd_4bit_Mode.c: 238:     LATDbits.LATD3 = 0;
  1389   000C00  968C               	bcf	140,3,c	;volatile
  1390                           
  1391                           ;lcd_4bit_Mode.c: 239:     _delay((unsigned long)((45)*(8000000/4000000.0)));
  1392   000C02  0E16               	movlw	22
  1393   000C04                     u1287:
  1394   000C04  FFFF               	dw	65535	; errata NOP
  1395   000C06  2EE8               	decfsz	wreg,f,c
  1396   000C08  D7FD               	bra	u1287
  1397   000C0A  D000               	nop2	
  1398   000C0C                     
  1399                           ;lcd_4bit_Mode.c: 241:     LCD_Instruction(0x20|0x28);
  1400   000C0C  0E28               	movlw	40
  1401   000C0E  EC0B  F005         	call	_LCD_Instruction
  1402   000C12                     
  1403                           ;lcd_4bit_Mode.c: 242:     LCD_Instruction(0x0C);
  1404   000C12  0E0C               	movlw	12
  1405   000C14  EC0B  F005         	call	_LCD_Instruction
  1406   000C18                     
  1407                           ;lcd_4bit_Mode.c: 243:     LCD_Instruction(0x01);
  1408   000C18  0E01               	movlw	1
  1409   000C1A  EC0B  F005         	call	_LCD_Instruction
  1410   000C1E                     
  1411                           ;lcd_4bit_Mode.c: 244:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1412   000C1E  0E04               	movlw	4
  1413   000C20  6E03               	movwf	??_LCD_Initializer^0,c
  1414   000C22  0EE5               	movlw	229
  1415   000C24                     u1297:
  1416   000C24  FFFF               	dw	65535	; errata NOP
  1417   000C26  2EE8               	decfsz	wreg,f,c
  1418   000C28  D7FD               	bra	u1297
  1419   000C2A  2E03               	decfsz	??_LCD_Initializer^0,f,c
  1420   000C2C  D7FB               	bra	u1297
  1421   000C2E  D000               	nop2	
  1422                           
  1423                           ;lcd_4bit_Mode.c: 245:     LCD_Instruction(0x06);
  1424   000C30  0E06               	movlw	6
  1425   000C32  EC0B  F005         	call	_LCD_Instruction
  1426   000C36  0012               	return		;funcret
  1427   000C38  FFFF               	dw	65535	; errata NOP
  1428   000C3A                     __end_of_LCD_Initializer:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _IO_Initializer *****************
  1432 ;; Defined at:
  1433 ;;		line 28 in file "system.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1447 ;;      Params:         0       0       0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_System_Initializer
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text7
  1461   00109C                     __ptext7:
  1462                           	callstack 0
  1463   00109C                     _IO_Initializer:
  1464                           	callstack 0
  1465   00109C  FFFF               	dw	65535	; assembler added errata NOP
  1466   00109E                     
  1467                           ;system.c: 31:     PORTA = 0x00;
  1468   00109E  0E00               	movlw	0
  1469   0010A0  6E80               	movwf	128,c	;volatile
  1470                           
  1471                           ;system.c: 32:     PORTB = 0x00;
  1472   0010A2  0E00               	movlw	0
  1473   0010A4  6E81               	movwf	129,c	;volatile
  1474                           
  1475                           ;system.c: 33:     PORTC = 0x00;
  1476   0010A6  0E00               	movlw	0
  1477   0010A8  6E82               	movwf	130,c	;volatile
  1478                           
  1479                           ;system.c: 34:     PORTD = 0x00;
  1480   0010AA  0E00               	movlw	0
  1481   0010AC  6E83               	movwf	131,c	;volatile
  1482                           
  1483                           ;system.c: 37:     LATA = 0x00;
  1484   0010AE  0E00               	movlw	0
  1485   0010B0  6E89               	movwf	137,c	;volatile
  1486                           
  1487                           ;system.c: 38:     LATB = 0x00;
  1488   0010B2  0E00               	movlw	0
  1489   0010B4  6E8A               	movwf	138,c	;volatile
  1490                           
  1491                           ;system.c: 39:     LATC = 0x00;
  1492   0010B6  0E00               	movlw	0
  1493   0010B8  6E8B               	movwf	139,c	;volatile
  1494                           
  1495                           ;system.c: 40:     LATD = 0x00;
  1496   0010BA  0E00               	movlw	0
  1497   0010BC  6E8C               	movwf	140,c	;volatile
  1498   0010BE                     
  1499                           ;system.c: 43:     TRISA = 0xFF;
  1500   0010BE  6892               	setf	146,c	;volatile
  1501   0010C0                     
  1502                           ;system.c: 44:     TRISB = 0xFF;
  1503   0010C0  6893               	setf	147,c	;volatile
  1504                           
  1505                           ;system.c: 45:     TRISC = 0x0F;
  1506   0010C2  0E0F               	movlw	15
  1507   0010C4  6E94               	movwf	148,c	;volatile
  1508                           
  1509                           ;system.c: 46:     TRISD = 0xF3;
  1510   0010C6  0EF3               	movlw	243
  1511   0010C8  6E95               	movwf	149,c	;volatile
  1512   0010CA                     
  1513                           ;system.c: 49:     INTCON2bits.RBPU = 0b0;
  1514   0010CA  9EF1               	bcf	241,7,c	;volatile
  1515                           
  1516                           ;system.c: 52:     CCP1CON = 0x00;
  1517   0010CC  0E00               	movlw	0
  1518   0010CE  6EBD               	movwf	189,c	;volatile
  1519                           
  1520                           ;system.c: 53:     CCP2CON = 0x00;
  1521   0010D0  0E00               	movlw	0
  1522   0010D2  6EBA               	movwf	186,c	;volatile
  1523   0010D4  0012               	return		;funcret
  1524   0010D6  FFFF               	dw	65535	; errata NOP
  1525   0010D8                     __end_of_IO_Initializer:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _LCD_Set_Latin_Char *****************
  1529 ;; Defined at:
  1530 ;;		line 179 in file "lcd_4bit_Mode.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  a_agudo         8   22[COMRAM] unsigned char [8]
  1535 ;;  a_til           8   14[COMRAM] unsigned char [8]
  1536 ;;  c_cedilha       8    6[COMRAM] unsigned char [8]
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1546 ;;      Params:         0       0       0       0       0       0       0
  1547 ;;      Locals:        24       0       0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0       0       0
  1549 ;;      Totals:        24       0       0       0       0       0       0
  1550 ;;Total ram usage:       24 bytes
  1551 ;; Hardware stack levels used: 1
  1552 ;; Hardware stack levels required when called: 2
  1553 ;; This function calls:
  1554 ;;		_LCD_Set_New_Simbol
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text8
  1561   000E90                     __ptext8:
  1562                           	callstack 0
  1563   000E90                     _LCD_Set_Latin_Char:
  1564                           	callstack 0
  1565   000E90  FFFF               	dw	65535	; assembler added errata NOP
  1566   000E92                     
  1567                           ;lcd_4bit_Mode.c: 181:     uint8_t c_cedilha[8] = {0b00000000,
  1568   000E92  EE20  F05C         	lfsr	2,LCD_Set_Latin_Char@F2508
  1569   000E96  EE10  F007         	lfsr	1,LCD_Set_Latin_Char@c_cedilha
  1570   000E9A  0E07               	movlw	7
  1571   000E9C                     u961:
  1572   000E9C  CFDB FFE3          	movff	plusw2,plusw1
  1573   000EA0  06E8               	decf	wreg,f,c
  1574   000EA2  E2FC               	bc	u961
  1575   000EA4                     
  1576                           ;lcd_4bit_Mode.c: 189:     LCD_Set_New_Simbol(c_cedilha,0);
  1577   000EA4  0E07               	movlw	low LCD_Set_Latin_Char@c_cedilha
  1578   000EA6  6E03               	movwf	LCD_Set_New_Simbol@simbol^0,c
  1579   000EA8  0E00               	movlw	high LCD_Set_Latin_Char@c_cedilha
  1580   000EAA  6E04               	movwf	(LCD_Set_New_Simbol@simbol+1)^0,c
  1581   000EAC  0E00               	movlw	0
  1582   000EAE  6E05               	movwf	LCD_Set_New_Simbol@simbol_address^0,c
  1583   000EB0  EC2A  F008         	call	_LCD_Set_New_Simbol	;wreg free
  1584   000EB4                     
  1585                           ;lcd_4bit_Mode.c: 191:     uint8_t a_til[8] = {0b00001101,
  1586   000EB4  EE20  F054         	lfsr	2,LCD_Set_Latin_Char@F2510
  1587   000EB8  EE10  F00F         	lfsr	1,LCD_Set_Latin_Char@a_til
  1588   000EBC  0E07               	movlw	7
  1589   000EBE                     u971:
  1590   000EBE  CFDB FFE3          	movff	plusw2,plusw1
  1591   000EC2  06E8               	decf	wreg,f,c
  1592   000EC4  E2FC               	bc	u971
  1593                           
  1594                           ;lcd_4bit_Mode.c: 199:     LCD_Set_New_Simbol(a_til,8);
  1595   000EC6  0E0F               	movlw	low LCD_Set_Latin_Char@a_til
  1596   000EC8  6E03               	movwf	LCD_Set_New_Simbol@simbol^0,c
  1597   000ECA  0E00               	movlw	high LCD_Set_Latin_Char@a_til
  1598   000ECC  6E04               	movwf	(LCD_Set_New_Simbol@simbol+1)^0,c
  1599   000ECE  0E08               	movlw	8
  1600   000ED0  6E05               	movwf	LCD_Set_New_Simbol@simbol_address^0,c
  1601   000ED2  EC2A  F008         	call	_LCD_Set_New_Simbol	;wreg free
  1602   000ED6                     
  1603                           ;lcd_4bit_Mode.c: 201:     uint8_t a_agudo[8] = {0b00000010,
  1604   000ED6  EE20  F04C         	lfsr	2,LCD_Set_Latin_Char@F2512
  1605   000EDA  EE10  F017         	lfsr	1,LCD_Set_Latin_Char@a_agudo
  1606   000EDE  0E07               	movlw	7
  1607   000EE0                     u981:
  1608   000EE0  CFDB FFE3          	movff	plusw2,plusw1
  1609   000EE4  06E8               	decf	wreg,f,c
  1610   000EE6  E2FC               	bc	u981
  1611   000EE8                     
  1612                           ;lcd_4bit_Mode.c: 209:     LCD_Set_New_Simbol(a_agudo,16);
  1613   000EE8  0E17               	movlw	low LCD_Set_Latin_Char@a_agudo
  1614   000EEA  6E03               	movwf	LCD_Set_New_Simbol@simbol^0,c
  1615   000EEC  0E00               	movlw	high LCD_Set_Latin_Char@a_agudo
  1616   000EEE  6E04               	movwf	(LCD_Set_New_Simbol@simbol+1)^0,c
  1617   000EF0  0E10               	movlw	16
  1618   000EF2  6E05               	movwf	LCD_Set_New_Simbol@simbol_address^0,c
  1619   000EF4  EC2A  F008         	call	_LCD_Set_New_Simbol	;wreg free
  1620   000EF8  0012               	return		;funcret
  1621   000EFA  FFFF               	dw	65535	; errata NOP
  1622   000EFC                     __end_of_LCD_Set_Latin_Char:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _LCD_Set_New_Simbol *****************
  1626 ;; Defined at:
  1627 ;;		line 169 in file "lcd_4bit_Mode.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  simbol          2    2[COMRAM] PTR unsigned char 
  1630 ;;		 -> LCD_Set_Latin_Char@a_agudo(8), LCD_Set_Latin_Char@a_til(8), LCD_Set_Latin_Char@c_cedilha(8), 
  1631 ;;  simbol_addre    1    4[COMRAM] unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  i               1    5[COMRAM] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1643 ;;      Params:         3       0       0       0       0       0       0
  1644 ;;      Locals:         1       0       0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0
  1646 ;;      Totals:         4       0       0       0       0       0       0
  1647 ;;Total ram usage:        4 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 1
  1650 ;; This function calls:
  1651 ;;		_LCD_Instruction
  1652 ;;		_putch
  1653 ;; This function is called by:
  1654 ;;		_LCD_Set_Latin_Char
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text9
  1659   001054                     __ptext9:
  1660                           	callstack 0
  1661   001054                     _LCD_Set_New_Simbol:
  1662                           	callstack 0
  1663   001054  FFFF               	dw	65535	; assembler added errata NOP
  1664   001056                     
  1665                           ;lcd_4bit_Mode.c: 169: void LCD_Set_New_Simbol(unsigned char *simbol, unsigned char simb
      +                          ol_address);lcd_4bit_Mode.c: 170: {;lcd_4bit_Mode.c: 171:     LCD_Instruction(0x40|simbo
      +                          l_address);
  1666   001056  5005               	movf	LCD_Set_New_Simbol@simbol_address^0,w,c
  1667   001058  0940               	iorlw	64
  1668   00105A  EC0B  F005         	call	_LCD_Instruction
  1669   00105E                     
  1670                           ;lcd_4bit_Mode.c: 173:     for(unsigned char i=0; 8>i; i++)
  1671   00105E  0E00               	movlw	0
  1672   001060  6E06               	movwf	LCD_Set_New_Simbol@i^0,c
  1673   001062  EF3E  F008         	goto	l1421
  1674   001066                     l1415:
  1675   001066  FFFF               	dw	65535	; assembler added errata NOP
  1676                           
  1677                           ;lcd_4bit_Mode.c: 174:         putch(*(simbol++));
  1678   001068  C003  FFD9         	movff	LCD_Set_New_Simbol@simbol,fsr2l
  1679   00106C  C004  FFDA         	movff	LCD_Set_New_Simbol@simbol+1,fsr2h
  1680   001070  50DF               	movf	indf2,w,c
  1681   001072  EC55  F004         	call	_putch
  1682   001076  4A03               	infsnz	LCD_Set_New_Simbol@simbol^0,f,c
  1683   001078  2A04               	incf	(LCD_Set_New_Simbol@simbol+1)^0,f,c
  1684   00107A  2A06               	incf	LCD_Set_New_Simbol@i^0,f,c
  1685   00107C                     l1421:
  1686   00107C  FFFF               	dw	65535	; assembler added errata NOP
  1687   00107E  0E07               	movlw	7
  1688   001080  6406               	cpfsgt	LCD_Set_New_Simbol@i^0,c
  1689   001082  EF45  F008         	goto	u951
  1690   001086  EF48  F008         	goto	u950
  1691   00108A                     u951:
  1692   00108A  FFFF               	dw	65535	; assembler added errata NOP
  1693   00108C  EF33  F008         	goto	l1415
  1694   001090                     u950:
  1695   001090  FFFF               	dw	65535	; assembler added errata NOP
  1696   001092                     
  1697                           ;lcd_4bit_Mode.c: 176:     LCD_Instruction(0x80);
  1698   001092  0E80               	movlw	128
  1699   001094  EC0B  F005         	call	_LCD_Instruction
  1700   001098  0012               	return		;funcret
  1701   00109A  FFFF               	dw	65535	; errata NOP
  1702   00109C                     __end_of_LCD_Set_New_Simbol:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _Cursor_Select *****************
  1706 ;; Defined at:
  1707 ;;		line 54 in file "screen.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  line            1    wreg     unsigned char 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  line            1   29[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1721 ;;      Params:         0       0       0       0       0       0       0
  1722 ;;      Locals:         1       0       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0
  1724 ;;      Totals:         1       0       0       0       0       0       0
  1725 ;;Total ram usage:        1 bytes
  1726 ;; Hardware stack levels used: 1
  1727 ;; Hardware stack levels required when called: 5
  1728 ;; This function calls:
  1729 ;;		_LCD_Move_Cursor
  1730 ;;		_printf
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text10
  1737   000EFC                     __ptext10:
  1738                           	callstack 0
  1739   000EFC                     _Cursor_Select:
  1740                           	callstack 0
  1741   000EFC  FFFF               	dw	65535	; assembler added errata NOP
  1742                           
  1743                           ;incstack = 0
  1744                           ;Cursor_Select@line stored from wreg
  1745   000EFE  6E1E               	movwf	Cursor_Select@line^0,c
  1746   000F00                     
  1747                           ;screen.c: 54: void Cursor_Select(unsigned char line);screen.c: 55: {;screen.c: 56:     
      +                          static unsigned char state = 2;;screen.c: 58:     LCD_Move_Cursor(state,1);
  1748   000F00  0E01               	movlw	1
  1749   000F02  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1750   000F04  5064               	movf	Cursor_Select@state^0,w,c
  1751   000F06  EC74  F006         	call	_LCD_Move_Cursor
  1752   000F0A                     
  1753                           ;screen.c: 59:     printf(" ");
  1754   000F0A  0E11               	movlw	low (STR_1+16)
  1755   000F0C  6E1A               	movwf	printf@fmt^0,c
  1756   000F0E  0E06               	movlw	high (STR_1+16)
  1757   000F10  6E1B               	movwf	(printf@fmt+1)^0,c
  1758   000F12  EC87  F008         	call	_printf	;wreg free
  1759   000F16                     
  1760                           ;screen.c: 60:     LCD_Move_Cursor(state,11);
  1761   000F16  0E0B               	movlw	11
  1762   000F18  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1763   000F1A  5064               	movf	Cursor_Select@state^0,w,c
  1764   000F1C  EC74  F006         	call	_LCD_Move_Cursor
  1765                           
  1766                           ;screen.c: 61:     printf("       ");
  1767   000F20  0E0B               	movlw	low (STR_1+10)
  1768   000F22  6E1A               	movwf	printf@fmt^0,c
  1769   000F24  0E06               	movlw	high (STR_1+10)
  1770   000F26  6E1B               	movwf	(printf@fmt+1)^0,c
  1771   000F28  EC87  F008         	call	_printf	;wreg free
  1772   000F2C                     
  1773                           ;screen.c: 63:     LCD_Move_Cursor(line,1);
  1774   000F2C  0E01               	movlw	1
  1775   000F2E  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1776   000F30  501E               	movf	Cursor_Select@line^0,w,c
  1777   000F32  EC74  F006         	call	_LCD_Move_Cursor
  1778   000F36                     
  1779                           ;screen.c: 64:     printf(">");
  1780   000F36  0E4E               	movlw	low STR_9
  1781   000F38  6E1A               	movwf	printf@fmt^0,c
  1782   000F3A  0E06               	movlw	high STR_9
  1783   000F3C  6E1B               	movwf	(printf@fmt+1)^0,c
  1784   000F3E  EC87  F008         	call	_printf	;wreg free
  1785                           
  1786                           ;screen.c: 65:     LCD_Move_Cursor(line,11);
  1787   000F42  0E0B               	movlw	11
  1788   000F44  6E03               	movwf	LCD_Move_Cursor@column^0,c
  1789   000F46  501E               	movf	Cursor_Select@line^0,w,c
  1790   000F48  EC74  F006         	call	_LCD_Move_Cursor
  1791   000F4C                     
  1792                           ;screen.c: 66:     printf("[ENTER]");
  1793   000F4C  0E46               	movlw	low STR_10
  1794   000F4E  6E1A               	movwf	printf@fmt^0,c
  1795   000F50  0E06               	movlw	high STR_10
  1796   000F52  6E1B               	movwf	(printf@fmt+1)^0,c
  1797   000F54  EC87  F008         	call	_printf	;wreg free
  1798   000F58                     
  1799                           ;screen.c: 68:     state = line;
  1800   000F58  C01E  F064         	movff	Cursor_Select@line,Cursor_Select@state
  1801   000F5C  0012               	return		;funcret
  1802   000F5E  FFFF               	dw	65535	; errata NOP
  1803   000F60                     __end_of_Cursor_Select:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _printf *****************
  1807 ;; Defined at:
  1808 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
  1811 ;;		 -> STR_10(8), STR_9(2), STR_8(8), STR_7(2), 
  1812 ;;		 -> STR_6(17), STR_5(8), STR_4(17), STR_3(8), 
  1813 ;;		 -> STR_2(18), STR_1(18), 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  ap              2   27[COMRAM] PTR void [1]
  1816 ;;		 -> ?_printf(2), 
  1817 ;;  ret             2    0        int 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  2   25[COMRAM] int 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1827 ;;      Params:         2       0       0       0       0       0       0
  1828 ;;      Locals:         2       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0
  1830 ;;      Totals:         4       0       0       0       0       0       0
  1831 ;;Total ram usage:        4 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 4
  1834 ;; This function calls:
  1835 ;;		_vfprintf
  1836 ;; This function is called by:
  1837 ;;		_Tela_Menu
  1838 ;;		_Tela_Option_1
  1839 ;;		_Tela_Option_2
  1840 ;;		_Cursor_Select
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text11
  1845   00110E                     __ptext11:
  1846                           	callstack 0
  1847   00110E                     _printf:
  1848                           	callstack 0
  1849   00110E  FFFF               	dw	65535	; assembler added errata NOP
  1850   001110  0E1C               	movlw	low (?_printf+2)
  1851   001112  6E1C               	movwf	printf@ap^0,c
  1852   001114  0E00               	movlw	high (?_printf+2)
  1853   001116  6E1D               	movwf	(printf@ap+1)^0,c
  1854   001118  0E00               	movlw	0
  1855   00111A  6E12               	movwf	vfprintf@fp^0,c
  1856   00111C  0E00               	movlw	0
  1857   00111E  6E13               	movwf	(vfprintf@fp+1)^0,c
  1858   001120  C01A  F014         	movff	printf@fmt,vfprintf@fmt
  1859   001124  C01B  F015         	movff	printf@fmt+1,vfprintf@fmt+1
  1860   001128  0E1C               	movlw	low printf@ap
  1861   00112A  6E16               	movwf	vfprintf@ap^0,c
  1862   00112C  0E00               	movlw	high printf@ap
  1863   00112E  6E17               	movwf	(vfprintf@ap+1)^0,c
  1864   001130  ECB0  F007         	call	_vfprintf	;wreg free
  1865   001134  0012               	return		;funcret
  1866   001136  FFFF               	dw	65535	; errata NOP
  1867   001138                     __end_of_printf:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function _vfprintf *****************
  1871 ;; Defined at:
  1872 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1875 ;;		 -> NULL(0), 
  1876 ;;  fmt             2   19[COMRAM] PTR const unsigned char 
  1877 ;;		 -> STR_10(8), STR_9(2), STR_8(8), STR_7(2), 
  1878 ;;		 -> STR_6(17), STR_5(8), STR_4(17), STR_3(8), 
  1879 ;;		 -> STR_2(18), STR_1(18), 
  1880 ;;  ap              2   21[COMRAM] PTR PTR void 
  1881 ;;		 -> printf@ap(2), 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  cfmt            2   23[COMRAM] PTR unsigned char 
  1884 ;;		 -> STR_10(8), STR_9(2), STR_8(8), STR_7(2), 
  1885 ;;		 -> STR_6(17), STR_5(8), STR_4(17), STR_3(8), 
  1886 ;;		 -> STR_2(18), STR_1(18), 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  2   17[COMRAM] int 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1896 ;;      Params:         6       0       0       0       0       0       0
  1897 ;;      Locals:         2       0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0
  1899 ;;      Totals:         8       0       0       0       0       0       0
  1900 ;;Total ram usage:        8 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 3
  1903 ;; This function calls:
  1904 ;;		_vfpfcnvrt
  1905 ;; This function is called by:
  1906 ;;		_printf
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text12
  1911   000F60                     __ptext12:
  1912                           	callstack 0
  1913   000F60                     _vfprintf:
  1914                           	callstack 0
  1915   000F60  FFFF               	dw	65535	; assembler added errata NOP
  1916   000F62                     
  1917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1918   000F62  C014  F018         	movff	vfprintf@fmt,vfprintf@cfmt
  1919   000F66  C015  F019         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1922   000F6A  EFC6  F007         	goto	l1385
  1923   000F6E                     l1383:
  1924   000F6E  FFFF               	dw	65535	; assembler added errata NOP
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1927   000F70  C012  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1928   000F74  C013  F00D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1929   000F78  0E18               	movlw	low vfprintf@cfmt
  1930   000F7A  6E0E               	movwf	vfpfcnvrt@fmt^0,c
  1931   000F7C  0E00               	movlw	high vfprintf@cfmt
  1932   000F7E  6E0F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1933   000F80  C016  F010         	movff	vfprintf@ap,vfpfcnvrt@ap
  1934   000F84  C017  F011         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1935   000F88  ECCA  F006         	call	_vfpfcnvrt	;wreg free
  1936   000F8C                     l1385:
  1937   000F8C  FFFF               	dw	65535	; assembler added errata NOP
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1940   000F8E  C018  FFF6         	movff	vfprintf@cfmt,tblptrl
  1941   000F92  C019  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1942   000F96                     	if	0	;tblptru may be non-zero
  1943   000F96                     	endif
  1944   000F96                     	if	0	;tblptru may be non-zero
  1945   000F96                     	endif
  1946   000F96  0008               	tblrd		*
  1947   000F98  FFFF               	dw	65535	; errata NOP
  1948   000F9A  50F5               	movf	tablat,w,c
  1949   000F9C  0900               	iorlw	0
  1950   000F9E  A4D8               	btfss	status,2,c
  1951   000FA0  EFD4  F007         	goto	u921
  1952   000FA4  EFD7  F007         	goto	u920
  1953   000FA8                     u921:
  1954   000FA8  FFFF               	dw	65535	; assembler added errata NOP
  1955   000FAA  EFB7  F007         	goto	l1383
  1956   000FAE                     u920:
  1957   000FAE  FFFF               	dw	65535	; assembler added errata NOP
  1958   000FB0                     
  1959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1960   000FB0  0E00               	movlw	0
  1961   000FB2  6E13               	movwf	(?_vfprintf+1)^0,c
  1962   000FB4  0E00               	movlw	0
  1963   000FB6  6E12               	movwf	?_vfprintf^0,c
  1964   000FB8  0012               	return		;funcret
  1965   000FBA  FFFF               	dw	65535	; errata NOP
  1966   000FBC                     __end_of_vfprintf:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function _vfpfcnvrt *****************
  1970 ;; Defined at:
  1971 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1974 ;;		 -> NULL(0), 
  1975 ;;  fmt             2   13[COMRAM] PTR PTR unsigned char 
  1976 ;;		 -> vfprintf@cfmt(2), 
  1977 ;;  ap              2   15[COMRAM] PTR PTR void 
  1978 ;;		 -> printf@ap(2), 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  convarg         8    0        struct .
  1981 ;;  cp              3    0        PTR unsigned char 
  1982 ;;  i               2    0        int 
  1983 ;;  done            2    0        int 
  1984 ;;  c               1    0        unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1994 ;;      Params:         6       0       0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0
  1997 ;;      Totals:         6       0       0       0       0       0       0
  1998 ;;Total ram usage:        6 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 2
  2001 ;; This function calls:
  2002 ;;		_fputc
  2003 ;; This function is called by:
  2004 ;;		_vfprintf
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text13
  2009   000D94                     __ptext13:
  2010                           	callstack 0
  2011   000D94                     _vfpfcnvrt:
  2012                           	callstack 0
  2013   000D94  FFFF               	dw	65535	; assembler added errata NOP
  2014   000D96                     
  2015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2016   000D96  C00E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2017   000D9A  C00F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2018   000D9E  CFDE FFF6          	movff	postinc2,tblptrl
  2019   000DA2  CFDD FFF7          	movff	postdec2,tblptrh
  2020   000DA6                     	if	0	;tblptru may be non-zero
  2021   000DA6                     	endif
  2022   000DA6                     	if	0	;tblptru may be non-zero
  2023   000DA6                     	endif
  2024   000DA6  0008               	tblrd		*
  2025   000DA8  FFFF               	dw	65535	; errata NOP
  2026   000DAA  50F5               	movf	tablat,w,c
  2027   000DAC  0A25               	xorlw	37
  2028   000DAE  A4D8               	btfss	status,2,c
  2029   000DB0  EFDC  F006         	goto	u911
  2030   000DB4  EFDF  F006         	goto	u910
  2031   000DB8                     u911:
  2032   000DB8  FFFF               	dw	65535	; assembler added errata NOP
  2033   000DBA  EFF9  F006         	goto	l1375
  2034   000DBE                     u910:
  2035   000DBE  FFFF               	dw	65535	; assembler added errata NOP
  2036   000DC0                     
  2037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2038   000DC0  C00E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2039   000DC4  C00F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2040   000DC8  2ADE               	incf	postinc2,f,c
  2041   000DCA  0E00               	movlw	0
  2042   000DCC  22DD               	addwfc	postdec2,f,c
  2043   000DCE                     
  2044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2045   000DCE  0E00               	movlw	0
  2046   000DD0  6E48               	movwf	(_width+1)^0,c
  2047   000DD2  0E00               	movlw	0
  2048   000DD4  6E47               	movwf	_width^0,c
  2049   000DD6  C047  F04B         	movff	_width,_flags
  2050   000DDA                     
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2052   000DDA  6849               	setf	_prec^0,c
  2053   000DDC  684A               	setf	(_prec+1)^0,c
  2054   000DDE                     l1371:
  2055   000DDE  FFFF               	dw	65535	; assembler added errata NOP
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2058   000DE0  C00E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2059   000DE4  C00F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2060   000DE8  2ADE               	incf	postinc2,f,c
  2061   000DEA  0E00               	movlw	0
  2062   000DEC  22DD               	addwfc	postdec2,f,c
  2063   000DEE  EF0F  F007         	goto	l903
  2064   000DF2                     l1375:
  2065   000DF2  FFFF               	dw	65535	; assembler added errata NOP
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2068   000DF4  C00E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2069   000DF8  C00F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2070   000DFC  CFDE FFF6          	movff	postinc2,tblptrl
  2071   000E00  CFDD FFF7          	movff	postdec2,tblptrh
  2072   000E04                     	if	0	;tblptru may be non-zero
  2073   000E04                     	endif
  2074   000E04                     	if	0	;tblptru may be non-zero
  2075   000E04                     	endif
  2076   000E04  0008               	tblrd		*
  2077   000E06  FFFF               	dw	65535	; errata NOP
  2078   000E08  50F5               	movf	tablat,w,c
  2079   000E0A  6E03               	movwf	fputc@c^0,c
  2080   000E0C  6A04               	clrf	(fputc@c+1)^0,c
  2081   000E0E  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2082   000E12  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2083   000E16  EC1D  F006         	call	_fputc	;wreg free
  2084   000E1A  EFEF  F006         	goto	l1371
  2085   000E1E                     l903:
  2086   000E1E  FFFF               	dw	65535	; assembler added errata NOP
  2087   000E20  0012               	return		;funcret
  2088   000E22  FFFF               	dw	65535	; errata NOP
  2089   000E24                     __end_of_vfpfcnvrt:
  2090                           	callstack 0
  2091                           
  2092 ;; *************** function _fputc *****************
  2093 ;; Defined at:
  2094 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  c               2    2[COMRAM] int 
  2097 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2098 ;;		 -> NULL(0), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  2    2[COMRAM] int 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2110 ;;      Params:         4       0       0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0
  2112 ;;      Temps:          5       0       0       0       0       0       0
  2113 ;;      Totals:         9       0       0       0       0       0       0
  2114 ;;Total ram usage:        9 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 1
  2117 ;; This function calls:
  2118 ;;		_putch
  2119 ;; This function is called by:
  2120 ;;		_vfpfcnvrt
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text14
  2125   000C3A                     __ptext14:
  2126                           	callstack 0
  2127   000C3A                     _fputc:
  2128                           	callstack 0
  2129   000C3A  FFFF               	dw	65535	; assembler added errata NOP
  2130   000C3C  5005               	movf	fputc@fp^0,w,c
  2131   000C3E  1006               	iorwf	(fputc@fp+1)^0,w,c
  2132   000C40  B4D8               	btfsc	status,2,c
  2133   000C42  EF25  F006         	goto	u871
  2134   000C46  EF28  F006         	goto	u870
  2135   000C4A                     u871:
  2136   000C4A  FFFF               	dw	65535	; assembler added errata NOP
  2137   000C4C  EF33  F006         	goto	l1353
  2138   000C50                     u870:
  2139   000C50  FFFF               	dw	65535	; assembler added errata NOP
  2140   000C52  5005               	movf	fputc@fp^0,w,c
  2141   000C54  1006               	iorwf	(fputc@fp+1)^0,w,c
  2142   000C56  A4D8               	btfss	status,2,c
  2143   000C58  EF30  F006         	goto	u881
  2144   000C5C  EF33  F006         	goto	u880
  2145   000C60                     u881:
  2146   000C60  FFFF               	dw	65535	; assembler added errata NOP
  2147   000C62  EF39  F006         	goto	l1355
  2148   000C66                     u880:
  2149   000C66                     l1353:
  2150   000C66  FFFF               	dw	65535	; assembler added errata NOP
  2151   000C68  5003               	movf	fputc@c^0,w,c
  2152   000C6A  EC55  F004         	call	_putch
  2153   000C6E  EF71  F006         	goto	l921
  2154   000C72                     l1355:
  2155   000C72  FFFF               	dw	65535	; assembler added errata NOP
  2156   000C74  EE20 F009          	lfsr	2,9
  2157   000C78  5005               	movf	fputc@fp^0,w,c
  2158   000C7A  26D9               	addwf	fsr2l,f,c
  2159   000C7C  5006               	movf	(fputc@fp+1)^0,w,c
  2160   000C7E  22DA               	addwfc	fsr2h,f,c
  2161   000C80  50DE               	movf	postinc2,w,c
  2162   000C82  10DE               	iorwf	postinc2,w,c
  2163   000C84  B4D8               	btfsc	status,2,c
  2164   000C86  EF47  F006         	goto	u891
  2165   000C8A  EF4A  F006         	goto	u890
  2166   000C8E                     u891:
  2167   000C8E  FFFF               	dw	65535	; assembler added errata NOP
  2168   000C90  EF67  F006         	goto	l1359
  2169   000C94                     u890:
  2170   000C94  FFFF               	dw	65535	; assembler added errata NOP
  2171   000C96  EE20 F009          	lfsr	2,9
  2172   000C9A  5005               	movf	fputc@fp^0,w,c
  2173   000C9C  26D9               	addwf	fsr2l,f,c
  2174   000C9E  5006               	movf	(fputc@fp+1)^0,w,c
  2175   000CA0  22DA               	addwfc	fsr2h,f,c
  2176   000CA2  EE10 F003          	lfsr	1,3
  2177   000CA6  5005               	movf	fputc@fp^0,w,c
  2178   000CA8  26E1               	addwf	fsr1l,f,c
  2179   000CAA  5006               	movf	(fputc@fp+1)^0,w,c
  2180   000CAC  22E2               	addwfc	fsr1h,f,c
  2181   000CAE  50DE               	movf	postinc2,w,c
  2182   000CB0  5CE6               	subwf	postinc1,w,c
  2183   000CB2  50E6               	movf	postinc1,w,c
  2184   000CB4  0A80               	xorlw	128
  2185   000CB6  6E0B               	movwf	(??_fputc+4)^0,c
  2186   000CB8  50DE               	movf	postinc2,w,c
  2187   000CBA  0A80               	xorlw	128
  2188   000CBC  580B               	subwfb	(??_fputc+4)^0,w,c
  2189   000CBE  B0D8               	btfsc	status,0,c
  2190   000CC0  EF64  F006         	goto	u901
  2191   000CC4  EF67  F006         	goto	u900
  2192   000CC8                     u901:
  2193   000CC8  FFFF               	dw	65535	; assembler added errata NOP
  2194   000CCA  EF71  F006         	goto	l921
  2195   000CCE                     u900:
  2196   000CCE                     l1359:
  2197   000CCE  FFFF               	dw	65535	; assembler added errata NOP
  2198   000CD0  EE20 F003          	lfsr	2,3
  2199   000CD4  5005               	movf	fputc@fp^0,w,c
  2200   000CD6  26D9               	addwf	fsr2l,f,c
  2201   000CD8  5006               	movf	(fputc@fp+1)^0,w,c
  2202   000CDA  22DA               	addwfc	fsr2h,f,c
  2203   000CDC  2ADE               	incf	postinc2,f,c
  2204   000CDE  0E00               	movlw	0
  2205   000CE0  22DD               	addwfc	postdec2,f,c
  2206   000CE2                     l921:
  2207   000CE2  FFFF               	dw	65535	; assembler added errata NOP
  2208   000CE4  0012               	return		;funcret
  2209   000CE6  FFFF               	dw	65535	; errata NOP
  2210   000CE8                     __end_of_fputc:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _putch *****************
  2214 ;; Defined at:
  2215 ;;		line 135 in file "lcd_4bit_Mode.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  data            1    wreg     unsigned char 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  data            1    1[COMRAM] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2229 ;;      Params:         0       0       0       0       0       0       0
  2230 ;;      Locals:         1       0       0       0       0       0       0
  2231 ;;      Temps:          1       0       0       0       0       0       0
  2232 ;;      Totals:         2       0       0       0       0       0       0
  2233 ;;Total ram usage:        2 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_LCD_Set_New_Simbol
  2239 ;;		_Tela_Menu
  2240 ;;		_Tela_Option_1
  2241 ;;		_Tela_Option_2
  2242 ;;		_fputc
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text15
  2247   0008AA                     __ptext15:
  2248                           	callstack 0
  2249   0008AA                     _putch:
  2250                           	callstack 0
  2251   0008AA  FFFF               	dw	65535	; assembler added errata NOP
  2252                           
  2253                           ;incstack = 0
  2254                           ;putch@data stored from wreg
  2255   0008AC  6E02               	movwf	putch@data^0,c
  2256   0008AE                     
  2257                           ;lcd_4bit_Mode.c: 135: void putch(char data);lcd_4bit_Mode.c: 136: {;lcd_4bit_Mode.c: 13
      +                          7:     LATDbits.LATD2 = 1;
  2258   0008AE  848C               	bsf	140,2,c	;volatile
  2259                           
  2260                           ;lcd_4bit_Mode.c: 138:     LATDbits.LATD3 = 1;
  2261   0008B0  868C               	bsf	140,3,c	;volatile
  2262   0008B2  BE02               	btfsc	putch@data^0,7,c
  2263   0008B4  EF5E  F004         	goto	u11
  2264   0008B8  EF63  F004         	goto	u10
  2265   0008BC                     u11:
  2266   0008BC  FFFF               	dw	65535	; assembler added errata NOP
  2267   0008BE  6A01               	clrf	??_putch^0,c
  2268   0008C0  2A01               	incf	??_putch^0,f,c
  2269   0008C2  EF65  F004         	goto	u28
  2270   0008C6                     u10:
  2271   0008C6  FFFF               	dw	65535	; assembler added errata NOP
  2272   0008C8  6A01               	clrf	??_putch^0,c
  2273   0008CA                     u28:
  2274   0008CA  FFFF               	dw	65535	; assembler added errata NOP
  2275   0008CC  3201               	rrcf	??_putch^0,f,c
  2276   0008CE  3201               	rrcf	??_putch^0,f,c
  2277   0008D0  508B               	movf	139,w,c	;volatile
  2278   0008D2  1801               	xorwf	??_putch^0,w,c
  2279   0008D4  0B7F               	andlw	-129
  2280   0008D6  1801               	xorwf	??_putch^0,w,c
  2281   0008D8  6E8B               	movwf	139,c	;volatile
  2282   0008DA  BC02               	btfsc	putch@data^0,6,c
  2283   0008DC  EF72  F004         	goto	u31
  2284   0008E0  EF77  F004         	goto	u30
  2285   0008E4                     u31:
  2286   0008E4  FFFF               	dw	65535	; assembler added errata NOP
  2287   0008E6  6A01               	clrf	??_putch^0,c
  2288   0008E8  2A01               	incf	??_putch^0,f,c
  2289   0008EA  EF79  F004         	goto	u48
  2290   0008EE                     u30:
  2291   0008EE  FFFF               	dw	65535	; assembler added errata NOP
  2292   0008F0  6A01               	clrf	??_putch^0,c
  2293   0008F2                     u48:
  2294   0008F2  FFFF               	dw	65535	; assembler added errata NOP
  2295   0008F4  3A01               	swapf	??_putch^0,f,c
  2296   0008F6  4601               	rlncf	??_putch^0,f,c
  2297   0008F8  4601               	rlncf	??_putch^0,f,c
  2298   0008FA  508B               	movf	139,w,c	;volatile
  2299   0008FC  1801               	xorwf	??_putch^0,w,c
  2300   0008FE  0BBF               	andlw	-65
  2301   000900  1801               	xorwf	??_putch^0,w,c
  2302   000902  6E8B               	movwf	139,c	;volatile
  2303   000904  BA02               	btfsc	putch@data^0,5,c
  2304   000906  EF87  F004         	goto	u51
  2305   00090A  EF8C  F004         	goto	u50
  2306   00090E                     u51:
  2307   00090E  FFFF               	dw	65535	; assembler added errata NOP
  2308   000910  6A01               	clrf	??_putch^0,c
  2309   000912  2A01               	incf	??_putch^0,f,c
  2310   000914  EF8E  F004         	goto	u68
  2311   000918                     u50:
  2312   000918  FFFF               	dw	65535	; assembler added errata NOP
  2313   00091A  6A01               	clrf	??_putch^0,c
  2314   00091C                     u68:
  2315   00091C  FFFF               	dw	65535	; assembler added errata NOP
  2316   00091E  3A01               	swapf	??_putch^0,f,c
  2317   000920  4601               	rlncf	??_putch^0,f,c
  2318   000922  508B               	movf	139,w,c	;volatile
  2319   000924  1801               	xorwf	??_putch^0,w,c
  2320   000926  0BDF               	andlw	-33
  2321   000928  1801               	xorwf	??_putch^0,w,c
  2322   00092A  6E8B               	movwf	139,c	;volatile
  2323   00092C  B802               	btfsc	putch@data^0,4,c
  2324   00092E  EF9B  F004         	goto	u71
  2325   000932  EFA0  F004         	goto	u70
  2326   000936                     u71:
  2327   000936  FFFF               	dw	65535	; assembler added errata NOP
  2328   000938  6A01               	clrf	??_putch^0,c
  2329   00093A  2A01               	incf	??_putch^0,f,c
  2330   00093C  EFA2  F004         	goto	u88
  2331   000940                     u70:
  2332   000940  FFFF               	dw	65535	; assembler added errata NOP
  2333   000942  6A01               	clrf	??_putch^0,c
  2334   000944                     u88:
  2335   000944  FFFF               	dw	65535	; assembler added errata NOP
  2336   000946  3A01               	swapf	??_putch^0,f,c
  2337   000948  508B               	movf	139,w,c	;volatile
  2338   00094A  1801               	xorwf	??_putch^0,w,c
  2339   00094C  0BEF               	andlw	-17
  2340   00094E  1801               	xorwf	??_putch^0,w,c
  2341   000950  6E8B               	movwf	139,c	;volatile
  2342   000952                     
  2343                           ;lcd_4bit_Mode.c: 142:     LATDbits.LATD3 = 0;
  2344   000952  968C               	bcf	140,3,c	;volatile
  2345   000954                     
  2346                           ;lcd_4bit_Mode.c: 143:     _delay((unsigned long)((45)*(8000000/4000000.0)));
  2347   000954  0E16               	movlw	22
  2348   000956                     u1307:
  2349   000956  FFFF               	dw	65535	; errata NOP
  2350   000958  2EE8               	decfsz	wreg,f,c
  2351   00095A  D7FD               	bra	u1307
  2352   00095C  D000               	nop2	
  2353   00095E                     
  2354                           ;lcd_4bit_Mode.c: 145:     LATDbits.LATD3 = 1;
  2355   00095E  868C               	bsf	140,3,c	;volatile
  2356   000960                     
  2357                           ;lcd_4bit_Mode.c: 147:     data <<= 4;
  2358   000960  3A02               	swapf	putch@data^0,f,c
  2359   000962  0EF0               	movlw	240
  2360   000964  1602               	andwf	putch@data^0,f,c
  2361   000966  BE02               	btfsc	putch@data^0,7,c
  2362   000968  EFB8  F004         	goto	u91
  2363   00096C  EFBD  F004         	goto	u90
  2364   000970                     u91:
  2365   000970  FFFF               	dw	65535	; assembler added errata NOP
  2366   000972  6A01               	clrf	??_putch^0,c
  2367   000974  2A01               	incf	??_putch^0,f,c
  2368   000976  EFBF  F004         	goto	u108
  2369   00097A                     u90:
  2370   00097A  FFFF               	dw	65535	; assembler added errata NOP
  2371   00097C  6A01               	clrf	??_putch^0,c
  2372   00097E                     u108:
  2373   00097E  FFFF               	dw	65535	; assembler added errata NOP
  2374   000980  3201               	rrcf	??_putch^0,f,c
  2375   000982  3201               	rrcf	??_putch^0,f,c
  2376   000984  508B               	movf	139,w,c	;volatile
  2377   000986  1801               	xorwf	??_putch^0,w,c
  2378   000988  0B7F               	andlw	-129
  2379   00098A  1801               	xorwf	??_putch^0,w,c
  2380   00098C  6E8B               	movwf	139,c	;volatile
  2381   00098E  BC02               	btfsc	putch@data^0,6,c
  2382   000990  EFCC  F004         	goto	u111
  2383   000994  EFD1  F004         	goto	u110
  2384   000998                     u111:
  2385   000998  FFFF               	dw	65535	; assembler added errata NOP
  2386   00099A  6A01               	clrf	??_putch^0,c
  2387   00099C  2A01               	incf	??_putch^0,f,c
  2388   00099E  EFD3  F004         	goto	u128
  2389   0009A2                     u110:
  2390   0009A2  FFFF               	dw	65535	; assembler added errata NOP
  2391   0009A4  6A01               	clrf	??_putch^0,c
  2392   0009A6                     u128:
  2393   0009A6  FFFF               	dw	65535	; assembler added errata NOP
  2394   0009A8  3A01               	swapf	??_putch^0,f,c
  2395   0009AA  4601               	rlncf	??_putch^0,f,c
  2396   0009AC  4601               	rlncf	??_putch^0,f,c
  2397   0009AE  508B               	movf	139,w,c	;volatile
  2398   0009B0  1801               	xorwf	??_putch^0,w,c
  2399   0009B2  0BBF               	andlw	-65
  2400   0009B4  1801               	xorwf	??_putch^0,w,c
  2401   0009B6  6E8B               	movwf	139,c	;volatile
  2402   0009B8  BA02               	btfsc	putch@data^0,5,c
  2403   0009BA  EFE1  F004         	goto	u131
  2404   0009BE  EFE6  F004         	goto	u130
  2405   0009C2                     u131:
  2406   0009C2  FFFF               	dw	65535	; assembler added errata NOP
  2407   0009C4  6A01               	clrf	??_putch^0,c
  2408   0009C6  2A01               	incf	??_putch^0,f,c
  2409   0009C8  EFE8  F004         	goto	u148
  2410   0009CC                     u130:
  2411   0009CC  FFFF               	dw	65535	; assembler added errata NOP
  2412   0009CE  6A01               	clrf	??_putch^0,c
  2413   0009D0                     u148:
  2414   0009D0  FFFF               	dw	65535	; assembler added errata NOP
  2415   0009D2  3A01               	swapf	??_putch^0,f,c
  2416   0009D4  4601               	rlncf	??_putch^0,f,c
  2417   0009D6  508B               	movf	139,w,c	;volatile
  2418   0009D8  1801               	xorwf	??_putch^0,w,c
  2419   0009DA  0BDF               	andlw	-33
  2420   0009DC  1801               	xorwf	??_putch^0,w,c
  2421   0009DE  6E8B               	movwf	139,c	;volatile
  2422   0009E0  B802               	btfsc	putch@data^0,4,c
  2423   0009E2  EFF5  F004         	goto	u151
  2424   0009E6  EFFA  F004         	goto	u150
  2425   0009EA                     u151:
  2426   0009EA  FFFF               	dw	65535	; assembler added errata NOP
  2427   0009EC  6A01               	clrf	??_putch^0,c
  2428   0009EE  2A01               	incf	??_putch^0,f,c
  2429   0009F0  EFFC  F004         	goto	u168
  2430   0009F4                     u150:
  2431   0009F4  FFFF               	dw	65535	; assembler added errata NOP
  2432   0009F6  6A01               	clrf	??_putch^0,c
  2433   0009F8                     u168:
  2434   0009F8  FFFF               	dw	65535	; assembler added errata NOP
  2435   0009FA  3A01               	swapf	??_putch^0,f,c
  2436   0009FC  508B               	movf	139,w,c	;volatile
  2437   0009FE  1801               	xorwf	??_putch^0,w,c
  2438   000A00  0BEF               	andlw	-17
  2439   000A02  1801               	xorwf	??_putch^0,w,c
  2440   000A04  6E8B               	movwf	139,c	;volatile
  2441   000A06                     
  2442                           ;lcd_4bit_Mode.c: 150:     LATDbits.LATD3 = 0;
  2443   000A06  968C               	bcf	140,3,c	;volatile
  2444                           
  2445                           ;lcd_4bit_Mode.c: 151:     _delay((unsigned long)((45)*(8000000/4000000.0)));
  2446   000A08  0E16               	movlw	22
  2447   000A0A                     u1317:
  2448   000A0A  FFFF               	dw	65535	; errata NOP
  2449   000A0C  2EE8               	decfsz	wreg,f,c
  2450   000A0E  D7FD               	bra	u1317
  2451   000A10  D000               	nop2	
  2452   000A12  0012               	return		;funcret
  2453   000A14  FFFF               	dw	65535	; errata NOP
  2454   000A16                     __end_of_putch:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _LCD_Move_Cursor *****************
  2458 ;; Defined at:
  2459 ;;		line 101 in file "lcd_4bit_Mode.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  line            1    wreg     unsigned char 
  2462 ;;  column          1    2[COMRAM] unsigned char 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  line            1    5[COMRAM] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2474 ;;      Params:         1       0       0       0       0       0       0
  2475 ;;      Locals:         1       0       0       0       0       0       0
  2476 ;;      Temps:          2       0       0       0       0       0       0
  2477 ;;      Totals:         4       0       0       0       0       0       0
  2478 ;;Total ram usage:        4 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 1
  2481 ;; This function calls:
  2482 ;;		_LCD_Instruction
  2483 ;; This function is called by:
  2484 ;;		_Tela_Menu
  2485 ;;		_Tela_Option_1
  2486 ;;		_Tela_Option_2
  2487 ;;		_Cursor_Select
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text16
  2492   000CE8                     __ptext16:
  2493                           	callstack 0
  2494   000CE8                     _LCD_Move_Cursor:
  2495                           	callstack 0
  2496   000CE8  FFFF               	dw	65535	; assembler added errata NOP
  2497                           
  2498                           ;incstack = 0
  2499                           ;LCD_Move_Cursor@line stored from wreg
  2500   000CEA  6E06               	movwf	LCD_Move_Cursor@line^0,c
  2501   000CEC                     
  2502                           ;lcd_4bit_Mode.c: 101: void LCD_Move_Cursor(unsigned char line, unsigned char column);lc
      +                          d_4bit_Mode.c: 102: {;lcd_4bit_Mode.c: 103:     if((1 > column) || (20 < column)) return
      +                          ;
  2503   000CEC  5003               	movf	LCD_Move_Cursor@column^0,w,c
  2504   000CEE  B4D8               	btfsc	status,2,c
  2505   000CF0  EF7C  F006         	goto	u931
  2506   000CF4  EF7F  F006         	goto	u930
  2507   000CF8                     u931:
  2508   000CF8  FFFF               	dw	65535	; assembler added errata NOP
  2509   000CFA  EFC7  F006         	goto	l81
  2510   000CFE                     u930:
  2511   000CFE  FFFF               	dw	65535	; assembler added errata NOP
  2512   000D00  0E14               	movlw	20
  2513   000D02  6403               	cpfsgt	LCD_Move_Cursor@column^0,c
  2514   000D04  EF86  F006         	goto	u941
  2515   000D08  EF89  F006         	goto	u940
  2516   000D0C                     u941:
  2517   000D0C  FFFF               	dw	65535	; assembler added errata NOP
  2518   000D0E  EFA8  F006         	goto	l1405
  2519   000D12                     u940:
  2520   000D12  FFFF               	dw	65535	; assembler added errata NOP
  2521   000D14  EFC7  F006         	goto	l81
  2522   000D18                     l1395:
  2523   000D18  FFFF               	dw	65535	; assembler added errata NOP
  2524                           
  2525                           ;lcd_4bit_Mode.c: 107:             LCD_Instruction(0x80+column-1);
  2526   000D1A  5003               	movf	LCD_Move_Cursor@column^0,w,c
  2527   000D1C  0F7F               	addlw	127
  2528   000D1E  EC0B  F005         	call	_LCD_Instruction
  2529                           
  2530                           ;lcd_4bit_Mode.c: 108:             break;
  2531   000D22  EFC7  F006         	goto	l81
  2532   000D26                     l1397:
  2533   000D26  FFFF               	dw	65535	; assembler added errata NOP
  2534                           
  2535                           ;lcd_4bit_Mode.c: 110:             LCD_Instruction(0xC0+column-1);
  2536   000D28  5003               	movf	LCD_Move_Cursor@column^0,w,c
  2537   000D2A  0FBF               	addlw	191
  2538   000D2C  EC0B  F005         	call	_LCD_Instruction
  2539                           
  2540                           ;lcd_4bit_Mode.c: 111:             break;
  2541   000D30  EFC7  F006         	goto	l81
  2542   000D34                     l1399:
  2543   000D34  FFFF               	dw	65535	; assembler added errata NOP
  2544                           
  2545                           ;lcd_4bit_Mode.c: 113:             LCD_Instruction(0x94+column-1);
  2546   000D36  5003               	movf	LCD_Move_Cursor@column^0,w,c
  2547   000D38  0F93               	addlw	147
  2548   000D3A  EC0B  F005         	call	_LCD_Instruction
  2549                           
  2550                           ;lcd_4bit_Mode.c: 114:             break;
  2551   000D3E  EFC7  F006         	goto	l81
  2552   000D42                     l1401:
  2553   000D42  FFFF               	dw	65535	; assembler added errata NOP
  2554                           
  2555                           ;lcd_4bit_Mode.c: 116:             LCD_Instruction(0xD4+column-1);
  2556   000D44  5003               	movf	LCD_Move_Cursor@column^0,w,c
  2557   000D46  0FD3               	addlw	211
  2558   000D48  EC0B  F005         	call	_LCD_Instruction
  2559                           
  2560                           ;lcd_4bit_Mode.c: 117:             break;
  2561   000D4C  EFC7  F006         	goto	l81
  2562   000D50                     l1405:
  2563   000D50  FFFF               	dw	65535	; assembler added errata NOP
  2564   000D52  5006               	movf	LCD_Move_Cursor@line^0,w,c
  2565   000D54  6E04               	movwf	??_LCD_Move_Cursor^0,c
  2566   000D56  6A05               	clrf	(??_LCD_Move_Cursor+1)^0,c
  2567                           
  2568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2569                           ; Switch size 1, requested type "simple"
  2570                           ; Number of cases is 1, Range of values is 0 to 0
  2571                           ; switch strategies available:
  2572                           ; Name         Instructions Cycles
  2573                           ; simple_byte            4     3 (average)
  2574                           ;	Chosen strategy is simple_byte
  2575   000D58  5005               	movf	(??_LCD_Move_Cursor+1)^0,w,c
  2576   000D5A  0A00               	xorlw	0	; case 0
  2577   000D5C  B4D8               	btfsc	status,2,c
  2578   000D5E  EFB3  F006         	goto	l1605
  2579   000D62  EFC7  F006         	goto	l81
  2580   000D66                     l1605:
  2581   000D66  FFFF               	dw	65535	; assembler added errata NOP
  2582                           
  2583                           ; Switch size 1, requested type "simple"
  2584                           ; Number of cases is 4, Range of values is 1 to 4
  2585                           ; switch strategies available:
  2586                           ; Name         Instructions Cycles
  2587                           ; simple_byte           13     7 (average)
  2588                           ;	Chosen strategy is simple_byte
  2589   000D68  5004               	movf	??_LCD_Move_Cursor^0,w,c
  2590   000D6A  0A01               	xorlw	1	; case 1
  2591   000D6C  B4D8               	btfsc	status,2,c
  2592   000D6E  EF8C  F006         	goto	l1395
  2593   000D72  0A03               	xorlw	3	; case 2
  2594   000D74  B4D8               	btfsc	status,2,c
  2595   000D76  EF93  F006         	goto	l1397
  2596   000D7A  0A01               	xorlw	1	; case 3
  2597   000D7C  B4D8               	btfsc	status,2,c
  2598   000D7E  EF9A  F006         	goto	l1399
  2599   000D82  0A07               	xorlw	7	; case 4
  2600   000D84  B4D8               	btfsc	status,2,c
  2601   000D86  EFA1  F006         	goto	l1401
  2602   000D8A  EFC7  F006         	goto	l81
  2603   000D8E                     l81:
  2604   000D8E  FFFF               	dw	65535	; assembler added errata NOP
  2605   000D90  0012               	return		;funcret
  2606   000D92  FFFF               	dw	65535	; errata NOP
  2607   000D94                     __end_of_LCD_Move_Cursor:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _LCD_Instruction *****************
  2611 ;; Defined at:
  2612 ;;		line 82 in file "lcd_4bit_Mode.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  instruction     1    wreg     unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  instruction     1    1[COMRAM] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2626 ;;      Params:         0       0       0       0       0       0       0
  2627 ;;      Locals:         1       0       0       0       0       0       0
  2628 ;;      Temps:          1       0       0       0       0       0       0
  2629 ;;      Totals:         2       0       0       0       0       0       0
  2630 ;;Total ram usage:        2 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_LCD_Move_Cursor
  2636 ;;		_LCD_Clear_Display
  2637 ;;		_LCD_Set_New_Simbol
  2638 ;;		_LCD_Initializer
  2639 ;;		_LCD_Return_Home
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text17
  2644   000A16                     __ptext17:
  2645                           	callstack 0
  2646   000A16                     _LCD_Instruction:
  2647                           	callstack 0
  2648   000A16  FFFF               	dw	65535	; assembler added errata NOP
  2649                           
  2650                           ;incstack = 0
  2651                           ;LCD_Instruction@instruction stored from wreg
  2652   000A18  6E02               	movwf	LCD_Instruction@instruction^0,c
  2653   000A1A                     
  2654                           ;lcd_4bit_Mode.c: 82: void LCD_Instruction(unsigned char instruction);lcd_4bit_Mode.c: 8
      +                          3: {;lcd_4bit_Mode.c: 84:     LATDbits.LATD2 = 0;
  2655   000A1A  948C               	bcf	140,2,c	;volatile
  2656                           
  2657                           ;lcd_4bit_Mode.c: 85:     LATDbits.LATD3 = 1;
  2658   000A1C  868C               	bsf	140,3,c	;volatile
  2659   000A1E  BE02               	btfsc	LCD_Instruction@instruction^0,7,c
  2660   000A20  EF14  F005         	goto	u221
  2661   000A24  EF19  F005         	goto	u220
  2662   000A28                     u221:
  2663   000A28  FFFF               	dw	65535	; assembler added errata NOP
  2664   000A2A  6A01               	clrf	??_LCD_Instruction^0,c
  2665   000A2C  2A01               	incf	??_LCD_Instruction^0,f,c
  2666   000A2E  EF1B  F005         	goto	u238
  2667   000A32                     u220:
  2668   000A32  FFFF               	dw	65535	; assembler added errata NOP
  2669   000A34  6A01               	clrf	??_LCD_Instruction^0,c
  2670   000A36                     u238:
  2671   000A36  FFFF               	dw	65535	; assembler added errata NOP
  2672   000A38  3201               	rrcf	??_LCD_Instruction^0,f,c
  2673   000A3A  3201               	rrcf	??_LCD_Instruction^0,f,c
  2674   000A3C  508B               	movf	139,w,c	;volatile
  2675   000A3E  1801               	xorwf	??_LCD_Instruction^0,w,c
  2676   000A40  0B7F               	andlw	-129
  2677   000A42  1801               	xorwf	??_LCD_Instruction^0,w,c
  2678   000A44  6E8B               	movwf	139,c	;volatile
  2679   000A46  BC02               	btfsc	LCD_Instruction@instruction^0,6,c
  2680   000A48  EF28  F005         	goto	u241
  2681   000A4C  EF2D  F005         	goto	u240
  2682   000A50                     u241:
  2683   000A50  FFFF               	dw	65535	; assembler added errata NOP
  2684   000A52  6A01               	clrf	??_LCD_Instruction^0,c
  2685   000A54  2A01               	incf	??_LCD_Instruction^0,f,c
  2686   000A56  EF2F  F005         	goto	u258
  2687   000A5A                     u240:
  2688   000A5A  FFFF               	dw	65535	; assembler added errata NOP
  2689   000A5C  6A01               	clrf	??_LCD_Instruction^0,c
  2690   000A5E                     u258:
  2691   000A5E  FFFF               	dw	65535	; assembler added errata NOP
  2692   000A60  3A01               	swapf	??_LCD_Instruction^0,f,c
  2693   000A62  4601               	rlncf	??_LCD_Instruction^0,f,c
  2694   000A64  4601               	rlncf	??_LCD_Instruction^0,f,c
  2695   000A66  508B               	movf	139,w,c	;volatile
  2696   000A68  1801               	xorwf	??_LCD_Instruction^0,w,c
  2697   000A6A  0BBF               	andlw	-65
  2698   000A6C  1801               	xorwf	??_LCD_Instruction^0,w,c
  2699   000A6E  6E8B               	movwf	139,c	;volatile
  2700   000A70  BA02               	btfsc	LCD_Instruction@instruction^0,5,c
  2701   000A72  EF3D  F005         	goto	u261
  2702   000A76  EF42  F005         	goto	u260
  2703   000A7A                     u261:
  2704   000A7A  FFFF               	dw	65535	; assembler added errata NOP
  2705   000A7C  6A01               	clrf	??_LCD_Instruction^0,c
  2706   000A7E  2A01               	incf	??_LCD_Instruction^0,f,c
  2707   000A80  EF44  F005         	goto	u278
  2708   000A84                     u260:
  2709   000A84  FFFF               	dw	65535	; assembler added errata NOP
  2710   000A86  6A01               	clrf	??_LCD_Instruction^0,c
  2711   000A88                     u278:
  2712   000A88  FFFF               	dw	65535	; assembler added errata NOP
  2713   000A8A  3A01               	swapf	??_LCD_Instruction^0,f,c
  2714   000A8C  4601               	rlncf	??_LCD_Instruction^0,f,c
  2715   000A8E  508B               	movf	139,w,c	;volatile
  2716   000A90  1801               	xorwf	??_LCD_Instruction^0,w,c
  2717   000A92  0BDF               	andlw	-33
  2718   000A94  1801               	xorwf	??_LCD_Instruction^0,w,c
  2719   000A96  6E8B               	movwf	139,c	;volatile
  2720   000A98  B802               	btfsc	LCD_Instruction@instruction^0,4,c
  2721   000A9A  EF51  F005         	goto	u281
  2722   000A9E  EF56  F005         	goto	u280
  2723   000AA2                     u281:
  2724   000AA2  FFFF               	dw	65535	; assembler added errata NOP
  2725   000AA4  6A01               	clrf	??_LCD_Instruction^0,c
  2726   000AA6  2A01               	incf	??_LCD_Instruction^0,f,c
  2727   000AA8  EF58  F005         	goto	u298
  2728   000AAC                     u280:
  2729   000AAC  FFFF               	dw	65535	; assembler added errata NOP
  2730   000AAE  6A01               	clrf	??_LCD_Instruction^0,c
  2731   000AB0                     u298:
  2732   000AB0  FFFF               	dw	65535	; assembler added errata NOP
  2733   000AB2  3A01               	swapf	??_LCD_Instruction^0,f,c
  2734   000AB4  508B               	movf	139,w,c	;volatile
  2735   000AB6  1801               	xorwf	??_LCD_Instruction^0,w,c
  2736   000AB8  0BEF               	andlw	-17
  2737   000ABA  1801               	xorwf	??_LCD_Instruction^0,w,c
  2738   000ABC  6E8B               	movwf	139,c	;volatile
  2739   000ABE                     
  2740                           ;lcd_4bit_Mode.c: 89:     LATDbits.LATD3 = 0;
  2741   000ABE  968C               	bcf	140,3,c	;volatile
  2742   000AC0                     
  2743                           ;lcd_4bit_Mode.c: 90:     _delay((unsigned long)((45)*(8000000/4000000.0)));
  2744   000AC0  0E16               	movlw	22
  2745   000AC2                     u1327:
  2746   000AC2  FFFF               	dw	65535	; errata NOP
  2747   000AC4  2EE8               	decfsz	wreg,f,c
  2748   000AC6  D7FD               	bra	u1327
  2749   000AC8  D000               	nop2	
  2750   000ACA                     
  2751                           ;lcd_4bit_Mode.c: 92:     LATDbits.LATD3 = 1;
  2752   000ACA  868C               	bsf	140,3,c	;volatile
  2753   000ACC                     
  2754                           ;lcd_4bit_Mode.c: 94:     instruction <<= 4;
  2755   000ACC  3A02               	swapf	LCD_Instruction@instruction^0,f,c
  2756   000ACE  0EF0               	movlw	240
  2757   000AD0  1602               	andwf	LCD_Instruction@instruction^0,f,c
  2758   000AD2  BE02               	btfsc	LCD_Instruction@instruction^0,7,c
  2759   000AD4  EF6E  F005         	goto	u301
  2760   000AD8  EF73  F005         	goto	u300
  2761   000ADC                     u301:
  2762   000ADC  FFFF               	dw	65535	; assembler added errata NOP
  2763   000ADE  6A01               	clrf	??_LCD_Instruction^0,c
  2764   000AE0  2A01               	incf	??_LCD_Instruction^0,f,c
  2765   000AE2  EF75  F005         	goto	u318
  2766   000AE6                     u300:
  2767   000AE6  FFFF               	dw	65535	; assembler added errata NOP
  2768   000AE8  6A01               	clrf	??_LCD_Instruction^0,c
  2769   000AEA                     u318:
  2770   000AEA  FFFF               	dw	65535	; assembler added errata NOP
  2771   000AEC  3201               	rrcf	??_LCD_Instruction^0,f,c
  2772   000AEE  3201               	rrcf	??_LCD_Instruction^0,f,c
  2773   000AF0  508B               	movf	139,w,c	;volatile
  2774   000AF2  1801               	xorwf	??_LCD_Instruction^0,w,c
  2775   000AF4  0B7F               	andlw	-129
  2776   000AF6  1801               	xorwf	??_LCD_Instruction^0,w,c
  2777   000AF8  6E8B               	movwf	139,c	;volatile
  2778   000AFA  BC02               	btfsc	LCD_Instruction@instruction^0,6,c
  2779   000AFC  EF82  F005         	goto	u321
  2780   000B00  EF87  F005         	goto	u320
  2781   000B04                     u321:
  2782   000B04  FFFF               	dw	65535	; assembler added errata NOP
  2783   000B06  6A01               	clrf	??_LCD_Instruction^0,c
  2784   000B08  2A01               	incf	??_LCD_Instruction^0,f,c
  2785   000B0A  EF89  F005         	goto	u338
  2786   000B0E                     u320:
  2787   000B0E  FFFF               	dw	65535	; assembler added errata NOP
  2788   000B10  6A01               	clrf	??_LCD_Instruction^0,c
  2789   000B12                     u338:
  2790   000B12  FFFF               	dw	65535	; assembler added errata NOP
  2791   000B14  3A01               	swapf	??_LCD_Instruction^0,f,c
  2792   000B16  4601               	rlncf	??_LCD_Instruction^0,f,c
  2793   000B18  4601               	rlncf	??_LCD_Instruction^0,f,c
  2794   000B1A  508B               	movf	139,w,c	;volatile
  2795   000B1C  1801               	xorwf	??_LCD_Instruction^0,w,c
  2796   000B1E  0BBF               	andlw	-65
  2797   000B20  1801               	xorwf	??_LCD_Instruction^0,w,c
  2798   000B22  6E8B               	movwf	139,c	;volatile
  2799   000B24  BA02               	btfsc	LCD_Instruction@instruction^0,5,c
  2800   000B26  EF97  F005         	goto	u341
  2801   000B2A  EF9C  F005         	goto	u340
  2802   000B2E                     u341:
  2803   000B2E  FFFF               	dw	65535	; assembler added errata NOP
  2804   000B30  6A01               	clrf	??_LCD_Instruction^0,c
  2805   000B32  2A01               	incf	??_LCD_Instruction^0,f,c
  2806   000B34  EF9E  F005         	goto	u358
  2807   000B38                     u340:
  2808   000B38  FFFF               	dw	65535	; assembler added errata NOP
  2809   000B3A  6A01               	clrf	??_LCD_Instruction^0,c
  2810   000B3C                     u358:
  2811   000B3C  FFFF               	dw	65535	; assembler added errata NOP
  2812   000B3E  3A01               	swapf	??_LCD_Instruction^0,f,c
  2813   000B40  4601               	rlncf	??_LCD_Instruction^0,f,c
  2814   000B42  508B               	movf	139,w,c	;volatile
  2815   000B44  1801               	xorwf	??_LCD_Instruction^0,w,c
  2816   000B46  0BDF               	andlw	-33
  2817   000B48  1801               	xorwf	??_LCD_Instruction^0,w,c
  2818   000B4A  6E8B               	movwf	139,c	;volatile
  2819   000B4C  B802               	btfsc	LCD_Instruction@instruction^0,4,c
  2820   000B4E  EFAB  F005         	goto	u361
  2821   000B52  EFB0  F005         	goto	u360
  2822   000B56                     u361:
  2823   000B56  FFFF               	dw	65535	; assembler added errata NOP
  2824   000B58  6A01               	clrf	??_LCD_Instruction^0,c
  2825   000B5A  2A01               	incf	??_LCD_Instruction^0,f,c
  2826   000B5C  EFB2  F005         	goto	u378
  2827   000B60                     u360:
  2828   000B60  FFFF               	dw	65535	; assembler added errata NOP
  2829   000B62  6A01               	clrf	??_LCD_Instruction^0,c
  2830   000B64                     u378:
  2831   000B64  FFFF               	dw	65535	; assembler added errata NOP
  2832   000B66  3A01               	swapf	??_LCD_Instruction^0,f,c
  2833   000B68  508B               	movf	139,w,c	;volatile
  2834   000B6A  1801               	xorwf	??_LCD_Instruction^0,w,c
  2835   000B6C  0BEF               	andlw	-17
  2836   000B6E  1801               	xorwf	??_LCD_Instruction^0,w,c
  2837   000B70  6E8B               	movwf	139,c	;volatile
  2838   000B72                     
  2839                           ;lcd_4bit_Mode.c: 97:     LATDbits.LATD3 = 0;
  2840   000B72  968C               	bcf	140,3,c	;volatile
  2841                           
  2842                           ;lcd_4bit_Mode.c: 98:     _delay((unsigned long)((45)*(8000000/4000000.0)));
  2843   000B74  0E16               	movlw	22
  2844   000B76                     u1337:
  2845   000B76  FFFF               	dw	65535	; errata NOP
  2846   000B78  2EE8               	decfsz	wreg,f,c
  2847   000B7A  D7FD               	bra	u1337
  2848   000B7C  D000               	nop2	
  2849   000B7E  0012               	return		;funcret
  2850   000B80  FFFF               	dw	65535	; errata NOP
  2851   000B82                     __end_of_LCD_Instruction:
  2852                           	callstack 0
  2853                           
  2854                           	psect	rparam
  2855   000000                     
  2856                           	psect	idloc
  2857                           
  2858                           ;Config register IDLOC0 @ 0x200000
  2859                           ;	unspecified, using default values
  2860   200000                     	org	2097152
  2861   200000  FF                 	db	255
  2862                           
  2863                           ;Config register IDLOC1 @ 0x200001
  2864                           ;	unspecified, using default values
  2865   200001                     	org	2097153
  2866   200001  FF                 	db	255
  2867                           
  2868                           ;Config register IDLOC2 @ 0x200002
  2869                           ;	unspecified, using default values
  2870   200002                     	org	2097154
  2871   200002  FF                 	db	255
  2872                           
  2873                           ;Config register IDLOC3 @ 0x200003
  2874                           ;	unspecified, using default values
  2875   200003                     	org	2097155
  2876   200003  FF                 	db	255
  2877                           
  2878                           ;Config register IDLOC4 @ 0x200004
  2879                           ;	unspecified, using default values
  2880   200004                     	org	2097156
  2881   200004  FF                 	db	255
  2882                           
  2883                           ;Config register IDLOC5 @ 0x200005
  2884                           ;	unspecified, using default values
  2885   200005                     	org	2097157
  2886   200005  FF                 	db	255
  2887                           
  2888                           ;Config register IDLOC6 @ 0x200006
  2889                           ;	unspecified, using default values
  2890   200006                     	org	2097158
  2891   200006  FF                 	db	255
  2892                           
  2893                           ;Config register IDLOC7 @ 0x200007
  2894                           ;	unspecified, using default values
  2895   200007                     	org	2097159
  2896   200007  FF                 	db	255
  2897                           
  2898                           	psect	config
  2899                           
  2900                           ; Padding undefined space
  2901   300000                     	org	3145728
  2902   300000  FF                 	db	255
  2903                           
  2904                           ;Config register CONFIG1H @ 0x300001
  2905                           ;	Oscillator Selection bits
  2906                           ;	OSC = HS, HS oscillator
  2907                           ;	Oscillator System Clock Switch Enable bit
  2908                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  2909   300001                     	org	3145729
  2910   300001  22                 	db	34
  2911                           
  2912                           ;Config register CONFIG2L @ 0x300002
  2913                           ;	Power-up Timer Enable bit
  2914                           ;	PWRT = ON, PWRT enabled
  2915                           ;	Brown-out Reset Enable bit
  2916                           ;	BOR = ON, Brown-out Reset enabled
  2917                           ;	Brown-out Reset Voltage bits
  2918                           ;	BORV = 20, VBOR set to 2.0V
  2919   300002                     	org	3145730
  2920   300002  0E                 	db	14
  2921                           
  2922                           ;Config register CONFIG2H @ 0x300003
  2923                           ;	Watchdog Timer Enable bit
  2924                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2925                           ;	Watchdog Timer Postscale Select bits
  2926                           ;	WDTPS = 128, 1:128
  2927   300003                     	org	3145731
  2928   300003  0E                 	db	14
  2929                           
  2930                           ; Padding undefined space
  2931   300004                     	org	3145732
  2932   300004  FF                 	db	255
  2933                           
  2934                           ;Config register CONFIG3H @ 0x300005
  2935                           ;	CCP2 Mux bit
  2936                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  2937   300005                     	org	3145733
  2938   300005  00                 	db	0
  2939                           
  2940                           ;Config register CONFIG4L @ 0x300006
  2941                           ;	Stack Full/Underflow Reset Enable bit
  2942                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  2943                           ;	Low Voltage ICSP Enable bit
  2944                           ;	LVP = OFF, Low Voltage ICSP disabled
  2945                           ;	Background Debugger Enable bit
  2946                           ;	DEBUG = 0x1, unprogrammed default
  2947   300006                     	org	3145734
  2948   300006  81                 	db	129
  2949                           
  2950                           ; Padding undefined space
  2951   300007                     	org	3145735
  2952   300007  FF                 	db	255
  2953                           
  2954                           ;Config register CONFIG5L @ 0x300008
  2955                           ;	Code Protection bit
  2956                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  2957                           ;	Code Protection bit
  2958                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  2959                           ;	Code Protection bit
  2960                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  2961                           ;	Code Protection bit
  2962                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  2963   300008                     	org	3145736
  2964   300008  0F                 	db	15
  2965                           
  2966                           ;Config register CONFIG5H @ 0x300009
  2967                           ;	Boot Block Code Protection bit
  2968                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  2969                           ;	Data EEPROM Code Protection bit
  2970                           ;	CPD = OFF, Data EEPROM not code protected
  2971   300009                     	org	3145737
  2972   300009  C0                 	db	192
  2973                           
  2974                           ;Config register CONFIG6L @ 0x30000A
  2975                           ;	Write Protection bit
  2976                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  2977                           ;	Write Protection bit
  2978                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  2979                           ;	Write Protection bit
  2980                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  2981                           ;	Write Protection bit
  2982                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  2983   30000A                     	org	3145738
  2984   30000A  0F                 	db	15
  2985                           
  2986                           ;Config register CONFIG6H @ 0x30000B
  2987                           ;	Configuration Register Write Protection bit
  2988                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  2989                           ;	Boot Block Write Protection bit
  2990                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  2991                           ;	Data EEPROM Write Protection bit
  2992                           ;	WRTD = OFF, Data EEPROM not write protected
  2993   30000B                     	org	3145739
  2994   30000B  E0                 	db	224
  2995                           
  2996                           ;Config register CONFIG7L @ 0x30000C
  2997                           ;	Table Read Protection bit
  2998                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  2999                           ;	Table Read Protection bit
  3000                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  3001                           ;	Table Read Protection bit
  3002                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  3003                           ;	Table Read Protection bit
  3004                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  3005   30000C                     	org	3145740
  3006   30000C  0F                 	db	15
  3007                           
  3008                           ;Config register CONFIG7H @ 0x30000D
  3009                           ;	Boot Block Table Read Protection bit
  3010                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  3011   30000D                     	org	3145741
  3012   30000D  40                 	db	64
  3013                           tosu	equ	0xFFF
  3014                           tosh	equ	0xFFE
  3015                           tosl	equ	0xFFD
  3016                           stkptr	equ	0xFFC
  3017                           pclatu	equ	0xFFB
  3018                           pclath	equ	0xFFA
  3019                           pcl	equ	0xFF9
  3020                           tblptru	equ	0xFF8
  3021                           tblptrh	equ	0xFF7
  3022                           tblptrl	equ	0xFF6
  3023                           tablat	equ	0xFF5
  3024                           prodh	equ	0xFF4
  3025                           prodl	equ	0xFF3
  3026                           indf0	equ	0xFEF
  3027                           postinc0	equ	0xFEE
  3028                           postdec0	equ	0xFED
  3029                           preinc0	equ	0xFEC
  3030                           plusw0	equ	0xFEB
  3031                           fsr0h	equ	0xFEA
  3032                           fsr0l	equ	0xFE9
  3033                           wreg	equ	0xFE8
  3034                           indf1	equ	0xFE7
  3035                           postinc1	equ	0xFE6
  3036                           postdec1	equ	0xFE5
  3037                           preinc1	equ	0xFE4
  3038                           plusw1	equ	0xFE3
  3039                           fsr1h	equ	0xFE2
  3040                           fsr1l	equ	0xFE1
  3041                           bsr	equ	0xFE0
  3042                           indf2	equ	0xFDF
  3043                           postinc2	equ	0xFDE
  3044                           postdec2	equ	0xFDD
  3045                           preinc2	equ	0xFDC
  3046                           plusw2	equ	0xFDB
  3047                           fsr2h	equ	0xFDA
  3048                           fsr2l	equ	0xFD9
  3049                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        25
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     38     100
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    S795$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S795$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_10(CODE[8]), STR_9(CODE[2]), STR_8(CODE[8]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[8]), STR_4(CODE[17]), STR_3(CODE[8]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_10(CODE[8]), STR_9(CODE[2]), STR_8(CODE[8]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[8]), STR_4(CODE[17]), STR_3(CODE[8]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S830$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_10(CODE[8]), STR_9(CODE[2]), STR_8(CODE[8]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[8]), STR_4(CODE[17]), STR_3(CODE[8]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    LCD_Set_New_Simbol@simbol	PTR unsigned char  size(2) Largest target is 8
		 -> LCD_Set_Latin_Char@a_agudo(COMRAM[8]), LCD_Set_Latin_Char@a_til(COMRAM[8]), LCD_Set_Latin_Char@c_cedilha(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_Cursor_Select
    _main->_LCD_Set_Latin_Char
    _Tela_Option_2->_printf
    _Tela_Option_1->_printf
    _Tela_Menu->_printf
    _LCD_Clear_Display->_LCD_Instruction
    _System_Initializer->_LCD_Initializer
    _LCD_Initializer->_LCD_Instruction
    _LCD_Set_Latin_Char->_LCD_Set_New_Simbol
    _LCD_Set_New_Simbol->_LCD_Instruction
    _LCD_Set_New_Simbol->_putch
    _Cursor_Select->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _LCD_Move_Cursor->_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   16518
                                             30 COMRAM     8     8      0
                      _Cursor_Select
                 _LCD_Set_Latin_Char
                 _System_Initializer
                          _Tela_Menu
                      _Tela_Option_1
                      _Tela_Option_2
 ---------------------------------------------------------------------------------
 (1) _Tela_Option_2                                        0     0      0    3857
                  _LCD_Clear_Display
                    _LCD_Move_Cursor
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (1) _Tela_Option_1                                        0     0      0    3857
                  _LCD_Clear_Display
                    _LCD_Move_Cursor
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (1) _Tela_Menu                                            0     0      0    3857
                  _LCD_Clear_Display
                    _LCD_Move_Cursor
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear_Display                                    1     1      0     120
                                              2 COMRAM     1     1      0
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (1) _System_Initializer                                   0     0      0     120
                     _IO_Initializer
                    _LCD_Initializer
 ---------------------------------------------------------------------------------
 (2) _LCD_Initializer                                      1     1      0     120
                                              2 COMRAM     1     1      0
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (2) _IO_Initializer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Latin_Char                                  24    24      0     837
                                              6 COMRAM    24    24      0
                 _LCD_Set_New_Simbol
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_New_Simbol                                   4     1      3     765
                                              2 COMRAM     4     1      3
                    _LCD_Instruction
                              _putch
 ---------------------------------------------------------------------------------
 (1) _Cursor_Select                                        1     1      0    3683
                                             29 COMRAM     1     1      0
                    _LCD_Move_Cursor
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2    2203
                                             25 COMRAM     4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    1391
                                             17 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           22    16      6    1044
                                             11 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     684
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                2     2      0     120
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Move_Cursor                                      4     3      1    1414
                                              2 COMRAM     4     3      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0     120
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cursor_Select
     _LCD_Move_Cursor
       _LCD_Instruction
     _printf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
   _LCD_Set_Latin_Char
     _LCD_Set_New_Simbol
       _LCD_Instruction
       _putch
   _System_Initializer
     _IO_Initializer
     _LCD_Initializer
       _LCD_Instruction
   _Tela_Menu
     _LCD_Clear_Display
       _LCD_Instruction
     _LCD_Move_Cursor
     _printf
     _putch
   _Tela_Option_1
     _LCD_Clear_Display
     _LCD_Move_Cursor
     _printf
     _putch
   _Tela_Option_2
     _LCD_Clear_Display
     _LCD_Move_Cursor
     _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     26      64       1       78.7%
BITBIGSFRhhhlh      33      0       0      17        0.0%
BITBIGSFRhhhlll     24      0       0      19        0.0%
BITBIGSFRhhhh        E      0       0      16        0.0%
BITBIGSFRhhl         5      0       0      20        0.0%
BITBIGSFRhll         5      0       0      21        0.0%
BITBIGSFRhhhllh      2      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      64      22        0.0%
DATA                 0      0      64       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 19 21:07:02 2023

                                                               l22 06AE  
                                                               l25 0706  
                                                               l36 08A0  
                                                               l28 075A  
                                                               l81 0D8E  
                                                               l75 0B7E  
                                                               l91 1152  
                                                               u10 08C6  
                                                               u11 08BC  
                                                               u30 08EE  
                                                               u31 08E4  
                                                               u50 0918  
                                                               u51 090E  
                                                               u28 08CA  
                                                               u70 0940  
                                                               u71 0936  
                                                               u48 08F2  
                                                               u90 097A  
                                                               u91 0970  
                                                               u68 091C  
                                                               u88 0944  
                                                  _LCD_Initializer 0B82  
                                                              l101 0A12  
                                                              l114 1098  
                                                              l123 0EF8  
                                                              l134 0C36  
                                                              l171 117A  
                                                              l174 10D4  
                                                              l191 1004  
                                                              l185 0E8C  
                                                              l196 0F5C  
                                                              l188 1050  
                                                              l903 0E1E  
                                                              l921 0CE2  
                                                              l931 08AE  
                                                              l941 0960  
                                                              l933 08B2  
                                                              l909 0FB8  
                                                              l951 0A06  
                                                              l943 0966  
                                                              l935 0952  
                                                              l945 098E  
                                                              l937 0954  
                                                              l947 09B8  
                                                              l939 095E  
                                                              l949 09E0  
                                                              l877 1134  
                                                              l991 0AC0  
                                                              l993 0ACA  
                                                              l985 0A1A  
                                                              l995 0ACC  
                                                              l987 0A1E  
                                                              l997 0AD2  
                                                              l989 0ABE  
                                                              l999 0AFA  
                                                              u110 09A2  
                                                              u111 0998  
                                                              u130 09CC  
                                                              u131 09C2  
                                                              u300 0AE6  
                                                              u220 0A32  
                                                              u108 097E  
                                                              u301 0ADC  
                                                              u221 0A28  
                                                              u150 09F4  
                                                              u151 09EA  
                                                              u320 0B0E  
                                                              u240 0A5A  
                                                              u128 09A6  
                                                              u321 0B04  
                                                              u241 0A50  
                                                              u340 0B38  
                                                              u260 0A84  
                                                              u148 09D0  
                                                              u341 0B2E  
                                                              u261 0A7A  
                                                              u318 0AEA  
                                                              u238 0A36  
                                                              u360 0B60  
                                                              u280 0AAC  
                                                              u168 09F8  
                                                              u361 0B56  
                                                              u281 0AA2  
                                                              u338 0B12  
                                                              u258 0A5E  
                                                              u358 0B3C  
                                                              u278 0A88  
                                                              u378 0B64  
                                                              u298 0AB0  
                                                              u900 0CCE  
                                                              u901 0CC8  
                                                              u910 0DBE  
                                                              u911 0DB8  
                                                              u920 0FAE  
                                                              u921 0FA8  
                                                              u930 0CFE  
                                                              u931 0CF8  
                                                              u940 0D12  
                                                              u941 0D0C  
                                                              u870 0C50  
                                                              u950 1090  
                                                              u871 0C4A  
                                                              u951 108A  
                                                              u880 0C66  
                                                              u881 0C60  
                                                              u961 0E9C  
                                                              u890 0C94  
                                                              u891 0C8E  
                                                              u971 0EBE  
                                                              u981 0EE0  
                                                              u990 0694  
                                                              u991 068E  
                                                              wreg 000FE8  
                                                             l1001 0B24  
                                                             l1003 0B4C  
                                                             l1005 0B72  
                                                             l1101 0BFC  
                                                             l1111 0C18  
                                                             l1103 0BFE  
                                                             l1121 10CA  
                                                             l1113 0C1E  
                                                             l1105 0C00  
                                                             l1115 109E  
                                                             l1107 0C0C  
                                                             l1131 1176  
                                                             l1117 10BE  
                                                             l1109 0C12  
                                                             l1061 0B9A  
                                                             l1037 113A  
                                                             l1119 10C0  
                                                             l1071 0BC0  
                                                             l1063 0B9C  
                                                             l1055 0B84  
                                                             l1039 1140  
                                                             l1401 0D42  
                                                             l1081 0BCA  
                                                             l1073 0BC2  
                                                             l1065 0B9E  
                                                             l1057 0B96  
                                                             l1129 1172  
                                                             l1411 1056  
                                                             l1091 0BE8  
                                                             l1083 0BE0  
                                                             l1075 0BC4  
                                                             l1067 0BA0  
                                                             l1059 0B98  
                                                             l1405 0D50  
                                                             l1421 107C  
                                                             l1413 105E  
                                                             l1093 0BEA  
                                                             l1085 0BE2  
                                                             l1077 0BC6  
                                                             l1069 0BA2  
                                                             l1501 0FE8  
                                                             l1351 0C52  
                                                             l1423 1092  
                                                             l1415 1066  
                                                             l1431 0E92  
                                                             l1095 0BF6  
                                                             l1087 0BE4  
                                                             l1079 0BC8  
                                                             l1503 0FEE  
                                                             l1511 0660  
                                                             l1353 0C66  
                                                             l1425 1110  
                                                             l1417 1076  
                                                             l1433 0EA4  
                                                             l1097 0BF8  
                                                             l1089 0BE6  
                                                             l1441 0E26  
                                                             l1521 0674  
                                                             l1513 0664  
                                                             l1505 0652  
                                                             l1355 0C72  
                                                             l1371 0DDE  
                                                             l1363 0D96  
                                                             l1427 1118  
                                                             l1419 107A  
                                                             l1435 0EB4  
                                                             l1099 0BFA  
                                                             l1451 0E50  
                                                             l1443 0E2A  
                                                             l1531 06A6  
                                                             l1523 0678  
                                                             l1515 0668  
                                                             l1507 0658  
                                                             l1605 0D66  
                                                             l1357 0C96  
                                                             l1349 0C3C  
                                                             l1365 0DC0  
                                                             l1381 0F62  
                                                             l1437 0ED6  
                                                             l1461 0E86  
                                                             l1453 0E56  
                                                             l1445 0E36  
                                                             l1541 06EE  
                                                             l1533 06C2  
                                                             l1525 067C  
                                                             l1517 066C  
                                                             l1509 065C  
                                                             l1391 0CEC  
                                                             l1359 0CCE  
                                                             l1367 0DCE  
                                                             l1375 0DF2  
                                                             l1383 0F6E  
                                                             l1471 0F36  
                                                             l1463 0F00  
                                                             l1439 0EE8  
                                                             l1455 0E6C  
                                                             l1447 0E40  
                                                             l1551 0742  
                                                             l1543 06FE  
                                                             l1535 06D2  
                                                             l1527 0682  
                                                             l1519 0670  
                                                             l1393 0D00  
                                                             l1369 0DDA  
                                                             l1385 0F8C  
                                                             l1473 0F4C  
                                                             l1465 0F0A  
                                                             l1457 0E76  
                                                             l1449 0E46  
                                                             l1481 101A  
                                                             l1561 0786  
                                                             l1553 0752  
                                                             l1545 071A  
                                                             l1537 06D6  
                                                             l1529 0696  
                                                             l1395 0D18  
                                                             l1387 0FB0  
                                                             l1475 0F58  
                                                             l1467 0F16  
                                                             l1459 0E7C  
                                                             l1483 1024  
                                                             l1491 0FBE  
                                                             l1571 07E0  
                                                             l1563 079C  
                                                             l1555 076E  
                                                             l1547 072A  
                                                             l1539 06DA  
                                                             l1397 0D26  
                                                             l1469 0F2C  
                                                             l1485 102A  
                                                             l1477 100A  
                                                             l1493 0FC2  
                                                             l1581 0820  
                                                             l1573 07E6  
                                                             l1565 07B0  
                                                             l1557 077E  
                                                             l1549 072E  
                                                             l1399 0D34  
                                                             l1487 1034  
                                                             l1479 100E  
                                                             l1495 0FCE  
                                                             l1583 0824  
                                                             l1591 0860  
                                                             l1575 07EE  
                                                             l1567 07C4  
                                                             l1559 0782  
                                                             l1489 103A  
                                                             l1497 0FD8  
                                                             l1593 0876  
                                                             l1585 0838  
                                                             l1569 07D8  
                                                             l1577 07F6  
                                                             l1499 0FDE  
                                                             l1595 088A  
                                                             l1587 0840  
                                                             l1579 080C  
                                                             l1597 0894  
                                                             l1589 0858  
                                                             l1599 0898  
                                                             STR_1 0601  
                                                             STR_2 0613  
                                                             STR_3 0636  
                                                             STR_4 0625  
                                                             STR_5 063E  
                                                             STR_6 0625  
                                                             STR_7 0611  
                                                             STR_8 060B  
                                                             STR_9 064E  
                                                             u1000 06C0  
                                                             u1001 06BA  
                                                             u1010 06EC  
                                                             u1011 06E6  
                                                             u1100 081E  
                                                             u1020 0718  
                                                             u1101 0818  
                                                             u1021 0712  
                                                             u1110 0836  
                                                             u1030 0740  
                                                             u1111 0830  
                                                             u1031 073A  
                                                             u1120 0856  
                                                             u1040 076C  
                                                             u1121 0850  
                                                             u1041 0766  
                                                             u1130 0874  
                                                             u1050 079A  
                                                             u1131 086E  
                                                             u1051 0794  
                                                             u1140 0888  
                                                             u1060 07AE  
                                                             u1141 0882  
                                                             u1061 07A8  
                                                             u1070 07C2  
                                                             u1071 07BC  
                                                             u1207 0774  
                                                             u1080 07D6  
                                                             u1217 1146  
                                                             u1081 07D0  
                                                             u1090 080A  
                                                             u1307 0956  
                                                             u1227 0B8A  
                                                             u1091 0804  
                                                             u1317 0A0A  
                                                             u1237 0BA6  
                                                             u1157 069C  
                                                             _LATA 000F89  
                                                             _LATB 000F8A  
                                                             u1327 0AC2  
                                                             u1247 0BB4  
                                                             u1167 06C8  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             u1337 0B76  
                                                             u1257 0BCE  
                                                             u1177 06F4  
                                                             u1267 0BD8  
                                                             u1187 0720  
                                                             u1277 0BEE  
                                                             u1197 0748  
                                                             u1287 0C04  
                                                             u1297 0C24  
                                        LCD_Set_Latin_Char@a_agudo 0017  
                                                             _dbuf 0027  
                                                             _main 0652  
                                                             _prec 0049  
                                                             fsr1h 000FE2  
                                                             fsr2h 000FDA  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             start 0002  
                                                     ___param_bank 000000  
                                                  _LCD_Instruction 0A16  
                                                            ?_main 0001  
                                                            STR_10 0646  
                                                  _LCD_Move_Cursor 0CE8  
                                                     vfpfcnvrt@fmt 000E  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _flags 004B  
                                                            _fputc 0C3A  
                                                            _width 0047  
                                                            _putch 08AA  
                                                            tablat 000FF5  
                                                            plusw1 000FE3  
                                                            plusw2 000FDB  
                                                            status 000FD8  
                                          __end_of_LCD_Initializer 0C3A  
                                                  __initialization 10D8  
                                                     __end_of_main 08AA  
                                                           ??_main 001F  
                                                    __activetblptr 000002  
                                              LCD_Move_Cursor@line 0006  
                                                           ?_fputc 0003  
                                                    _Cursor_Select 0EFC  
                                                           ?_putch 0001  
                                      LCD_Set_Latin_Char@c_cedilha 0007  
                                          __end_of_LCD_Instruction 0B82  
                                                     vfprintf@cfmt 0018  
                                          __end_of_LCD_Move_Cursor 0D94  
                                                           clear_0 10FE  
                                                           isa$std 000001  
                                                           _printf 110E  
                                                           fputc@c 0003  
                                                     __pdataCOMRAM 004C  
                                                     __mediumconst 0000  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                 __end_of_vfprintf 0FBC  
                                                   ?_Cursor_Select 0001  
                                                       __accesstop 0080  
                                          __end_of__initialization 1104  
                                                   _IO_Initializer 109C  
                                                    ___rparam_used 000001  
                                                 ?_LCD_Initializer 0001  
                                                   __pcstackCOMRAM 0001  
                                                    __end_of_fputc 0CE8  
                                                    __end_of_putch 0A16  
                                                          ??_fputc 0007  
                                                __end_of_Tela_Menu 0E90  
                                                          ??_putch 0001  
                                           __end_of_IO_Initializer 10D8  
                                                 ?_LCD_Instruction 0001  
                                       __end_of_LCD_Set_Latin_Char 0EFC  
                                                 ?_LCD_Move_Cursor 0003  
                                                _LCD_Clear_Display 1138  
                                                          _CCP1CON 000FBD  
                                                          _CCP2CON 000FBA  
                                                          ?_printf 001A  
                                               ?_LCD_Clear_Display 0001  
                                       __end_of_LCD_Set_New_Simbol 109C  
                                                  ??_Cursor_Select 001E  
                                              ??_LCD_Clear_Display 0003  
                                       __end_of_System_Initializer 117E  
                                                  ?_IO_Initializer 0001  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                        __end_of_LCD_Clear_Display 1156  
                                                        ?_vfprintf 0012  
                                                     __psmallconst 0600  
                                                          __pcinit 10D8  
                                                          __ramtop 0600  
                                                          __ptext0 0652  
                                                          __ptext1 0FBC  
                                                          __ptext2 1008  
                                                          __ptext3 0E24  
                                                          __ptext4 1138  
                                                          __ptext5 1170  
                                                          __ptext6 0B82  
                                                          __ptext7 109C  
                                                          __ptext8 0E90  
                                                          __ptext9 1054  
                                                    _Tela_Option_1 1008  
                                                    _Tela_Option_2 0FBC  
                                             end_of_initialization 1104  
                                                          fputc@fp 0005  
                                                    __Lmediumconst 0000  
                                                __end_of_vfpfcnvrt 0E24  
                                                          postdec1 000FE5  
                                                          postdec2 000FDD  
                                                          postinc0 000FEE  
                                                          postinc1 000FE6  
                                                          postinc2 000FDE  
                                                       ??_vfprintf 0018  
                                                        _PORTBbits 000F81  
                                                   ?_Tela_Option_1 0001  
                                                   ?_Tela_Option_2 0001  
                                            main@flag_RETORNA_MENU 0022  
                                                      vfpfcnvrt@ap 0010  
                                                      vfpfcnvrt@fp 000C  
                                                    __pidataCOMRAM 1156  
                                              main@flag_ENTER_MENU 0021  
                                                   __end_of_printf 1138  
                                              start_initialization 10D8  
                                                        _Tela_Menu 0E24  
                                                      vfprintf@fmt 0014  
                                                  ??_Tela_Option_1 001E  
                                                  ??_Tela_Option_2 001E  
                                    main@flag_SELECIONA_MENU_state 0024  
                                                         ??_printf 001C  
                                                      __pbssCOMRAM 0027  
                                               _LCD_Set_Latin_Char 0E90  
                                                 ??_IO_Initializer 0001  
                                          main@flag_SELECIONA_MENU 0020  
                                              ?_LCD_Set_Latin_Char 0001  
                                               _LCD_Set_New_Simbol 1054  
                                                       ?_Tela_Menu 0001  
                                            LCD_Move_Cursor@column 0003  
                                              main@flag_STATE_MENU 0026  
                                               _System_Initializer 1170  
                                              ?_LCD_Set_New_Simbol 0003  
                                             ??_LCD_Set_Latin_Char 0007  
                                              ?_System_Initializer 0001  
                                                      __smallconst 0600  
                                             ??_LCD_Set_New_Simbol 0006  
                                            __end_of_Cursor_Select 0F60  
                                             ??_System_Initializer 0004  
                                                         _LATCbits 000F8B  
                                                         _LATDbits 000F8C  
                                       LCD_Instruction@instruction 0002  
                                                        _vfpfcnvrt 0D94  
                                         LCD_Set_New_Simbol@simbol 0003  
                                                ??_LCD_Initializer 0003  
                                                      _INTCON2bits 000FF1  
                                                        copy_data0 10EC  
                                                      ??_Tela_Menu 001E  
                                                         __Hrparam 0000  
                                                       vfprintf@ap 0016  
                                                         __Lrparam 0000  
                                                       vfprintf@fp 0012  
                                                       ?_vfpfcnvrt 000C  
                                                ??_LCD_Instruction 0001  
                                                         __ptext10 0EFC  
                                                         __ptext11 110E  
                                                         __ptext12 0F60  
                                                         __ptext13 0D94  
                                                         __ptext14 0C3A  
                                                         __ptext15 08AA  
                                                         __ptext16 0CE8  
                                                         __ptext17 0A16  
                                      main@flag_RETORNA_MENU_state 0023  
                                          LCD_Set_Latin_Char@F2510 0054  
                                          LCD_Set_Latin_Char@F2512 004C  
                                          LCD_Set_Latin_Char@F2508 005C  
                                                ??_LCD_Move_Cursor 0004  
                                          LCD_Set_Latin_Char@a_til 000F  
                                               Cursor_Select@state 0064  
                                                         isa$xinst 000000  
                                                         _vfprintf 0F60  
                                                        printf@fmt 001A  
                                                        putch@data 0002  
                                              LCD_Set_New_Simbol@i 0006  
                                                Cursor_Select@line 001E  
                                                         printf@ap 001C  
                                                      ??_vfpfcnvrt 0012  
                                        main@flag_ENTER_MENU_state 0025  
                                            __end_of_Tela_Option_1 1054  
                                            __end_of_Tela_Option_2 1008  
                                 LCD_Set_New_Simbol@simbol_address 0005  
